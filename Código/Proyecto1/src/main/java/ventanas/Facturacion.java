/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventanas;

// importar librerías de swing
import java.awt.Color;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.table.DefaultTableModel;

// Importar las clases de lógica:
import com.mycompany.proyecto1.Archivo;
import com.mycompany.proyecto1.Facturas.BuscarFactura;
import com.mycompany.proyecto1.Facturas.DetalleFactura;
import com.mycompany.proyecto1.Facturas.EncabezadoFactura;
import com.mycompany.proyecto1.Facturas.Factura;
import com.mycompany.proyecto1.Facturas.UtilidadesFacturas;
import com.mycompany.proyecto1.Mantenimiento;
import com.mycompany.proyecto1.Validador;
import com.mycompany.proyecto1.Utilidades;

// Importar las clases de objetos:
import com.mycompany.proyecto1.TipoProducto;
import com.mycompany.proyecto1.Producto;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;


// TODO: Auto-generated Javadoc
/**
 * The Class Facturacion.
 *
 * @author noe
 */
public class Facturacion extends javax.swing.JFrame {
    
    /** The estado. */
    // Variable global para validar el estado de la factura al anular
    String estado;

    /**
     * Creates new form MenuOpciones.
     */
    public Facturacion() {
        initComponents();
        
            // Quitar la visibilidad del botón de anular factura
            button_anular_factura.setVisible(false);


            // Aplicar el efecto hover y selección a los botones (TOOLBAR)
            ButtonHoverEffect.applySelectableHoverEffect(agregar_fact);
            ButtonHoverEffect.applySelectableHoverEffect(modificar_fact);
            ButtonHoverEffect.applySelectableHoverEffect(salir);


            // Define los colores
            Color hoverColor = new Color(150,150,150); // Gris claro (al pasar el cursor)
            Color originalColor = Color.BLACK; // Negro (borde inicial)

            // Crear la instancia de ButtonHoverEffect para el efecto
            ButtonHoverEffect hoverEffect = new ButtonHoverEffect(hoverColor, originalColor);

            // Aplica el efecto hover a cada botón
            hoverEffect.applyTo(facturar_producto);
            hoverEffect.applyTo(facturar_servicio);
        
            // Aplica el efecto hover a cada botón (Buscar y anular factura)
            hoverEffect.applyTo(button_buscar_factura);
            hoverEffect.applyTo(button_anular_factura);

            // Registrar los paneles en el CardLayout
            SubFrameContainer.add(agregarPanel, "agregarPanel");
            SubFrameContainer.add(modificarPanel, "modificarPanel");
        
            // Mostrar la bienvenida al inicio
            SubFrameContainer.add(bienvenidaPanel, "bienvenidaPanel");
            java.awt.CardLayout layout = (java.awt.CardLayout) SubFrameContainer.getLayout();
            layout.show(SubFrameContainer, "bienvenidaPanel");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        funciones = new javax.swing.JToolBar();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        agregar_fact = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        modificar_fact = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        salir = new javax.swing.JButton();
        SubFrameContainer = new javax.swing.JPanel();
        bienvenidaPanel = new javax.swing.JPanel();
        bienvenidaLabel = new javax.swing.JLabel();
        bienvenidaLabel1 = new javax.swing.JLabel();
        mant_icon = new javax.swing.JLabel();
        agregarPanel = new javax.swing.JPanel();
        facturar_producto = new javax.swing.JButton();
        facturar_servicio = new javax.swing.JButton();
        label_descripcion_prod = new javax.swing.JLabel();
        label_descripcion_prod1 = new javax.swing.JLabel();
        modificarPanel = new javax.swing.JPanel();
        label_tipo_factura = new javax.swing.JLabel();
        combo_tipo_factura = new javax.swing.JComboBox<>();
        filtro_agregar = new javax.swing.JLabel();
        combo_criterio_busqueda = new javax.swing.JComboBox<>();
        box_busqueda = new javax.swing.JTextField();
        button_buscar_factura = new javax.swing.JButton();
        text_buscar_agregar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_resultado = new javax.swing.JTable();
        button_anular_factura = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1000, 800));
        setResizable(false);
        setSize(new java.awt.Dimension(1000, 800));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        funciones.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        funciones.setFloatable(false);
        funciones.setRollover(true);

        jSeparator1.setEnabled(false);
        jSeparator1.setRequestFocusEnabled(false);
        jSeparator1.setSeparatorSize(new java.awt.Dimension(275, 10));
        funciones.add(jSeparator1);

        agregar_fact.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        agregar_fact.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/add_item.png"))); // NOI18N
        agregar_fact.setText("Agregar factura");
        agregar_fact.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        agregar_fact.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        agregar_fact.setFocusable(false);
        agregar_fact.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        agregar_fact.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        agregar_fact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar_factActionPerformed(evt);
            }
        });
        funciones.add(agregar_fact);

        jSeparator2.setSeparatorSize(new java.awt.Dimension(25, 10));
        funciones.add(jSeparator2);

        modificar_fact.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        modificar_fact.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/modify.png"))); // NOI18N
        modificar_fact.setText("Buscar/Anular factura");
        modificar_fact.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        modificar_fact.setFocusable(false);
        modificar_fact.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        modificar_fact.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        modificar_fact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificar_factActionPerformed(evt);
            }
        });
        funciones.add(modificar_fact);

        jSeparator3.setSeparatorSize(new java.awt.Dimension(25, 10));
        funciones.add(jSeparator3);

        salir.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/exit.png"))); // NOI18N
        salir.setText("Regresar al menú");
        salir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        salir.setFocusable(false);
        salir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        funciones.add(salir);

        SubFrameContainer.setLayout(new java.awt.CardLayout());

        bienvenidaLabel.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        bienvenidaLabel.setText("¡Bienvenido al menú de facturación!");

        bienvenidaLabel1.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        bienvenidaLabel1.setText("Elija una opción para comenzar");

        mant_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/billing_icon.png"))); // NOI18N

        javax.swing.GroupLayout bienvenidaPanelLayout = new javax.swing.GroupLayout(bienvenidaPanel);
        bienvenidaPanel.setLayout(bienvenidaPanelLayout);
        bienvenidaPanelLayout.setHorizontalGroup(
            bienvenidaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bienvenidaPanelLayout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addGroup(bienvenidaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bienvenidaPanelLayout.createSequentialGroup()
                        .addComponent(bienvenidaLabel1)
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bienvenidaPanelLayout.createSequentialGroup()
                        .addComponent(mant_icon)
                        .addGap(297, 297, 297))
                    .addComponent(bienvenidaLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(196, Short.MAX_VALUE))
        );
        bienvenidaPanelLayout.setVerticalGroup(
            bienvenidaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bienvenidaPanelLayout.createSequentialGroup()
                .addGap(177, 177, 177)
                .addComponent(bienvenidaLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bienvenidaLabel1)
                .addGap(18, 18, 18)
                .addComponent(mant_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(331, Short.MAX_VALUE))
        );

        SubFrameContainer.add(bienvenidaPanel, "card2");

        facturar_producto.setFont(new java.awt.Font("Century Gothic", 3, 28)); // NOI18N
        facturar_producto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/bill_checked.png"))); // NOI18N
        facturar_producto.setText("Facturar un producto");
        facturar_producto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        facturar_producto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        facturar_producto.setFocusable(false);
        facturar_producto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        facturar_producto.setIconTextGap(30);
        facturar_producto.setMaximumSize(new java.awt.Dimension(560, 79));
        facturar_producto.setMinimumSize(new java.awt.Dimension(560, 79));
        facturar_producto.setPreferredSize(new java.awt.Dimension(560, 79));
        facturar_producto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        facturar_producto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facturar_productoActionPerformed(evt);
            }
        });

        facturar_servicio.setFont(new java.awt.Font("Century Gothic", 3, 28)); // NOI18N
        facturar_servicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/bill_service.png"))); // NOI18N
        facturar_servicio.setText("Facturar un servicio");
        facturar_servicio.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        facturar_servicio.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        facturar_servicio.setFocusable(false);
        facturar_servicio.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        facturar_servicio.setIconTextGap(30);
        facturar_servicio.setMaximumSize(new java.awt.Dimension(560, 79));
        facturar_servicio.setMinimumSize(new java.awt.Dimension(560, 79));
        facturar_servicio.setPreferredSize(new java.awt.Dimension(560, 79));
        facturar_servicio.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        facturar_servicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facturar_servicioActionPerformed(evt);
            }
        });

        label_descripcion_prod.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        label_descripcion_prod.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_descripcion_prod.setText("<html>Facturar productos para un cliente.</html>");

        label_descripcion_prod1.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        label_descripcion_prod1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_descripcion_prod1.setText("<html>\nFacturar un servicio de mantenimiento\n<br>\npara un cliente.\n</html>");

        javax.swing.GroupLayout agregarPanelLayout = new javax.swing.GroupLayout(agregarPanel);
        agregarPanel.setLayout(agregarPanelLayout);
        agregarPanelLayout.setHorizontalGroup(
            agregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agregarPanelLayout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addGroup(agregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(facturar_producto, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_descripcion_prod))
                .addGap(105, 105, 105)
                .addGroup(agregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(facturar_servicio, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_descripcion_prod1))
                .addContainerGap(146, Short.MAX_VALUE))
        );
        agregarPanelLayout.setVerticalGroup(
            agregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agregarPanelLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(agregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(facturar_producto, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                    .addComponent(facturar_servicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(agregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_descripcion_prod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_descripcion_prod1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(145, Short.MAX_VALUE))
        );

        facturar_producto.getAccessibleContext().setAccessibleDescription("Facturar productos y artículos varios.");

        SubFrameContainer.add(agregarPanel, "card2");

        label_tipo_factura.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        label_tipo_factura.setText("Tipo");

        combo_tipo_factura.setBackground(new java.awt.Color(255, 255, 255));
        combo_tipo_factura.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        combo_tipo_factura.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Producto", "Mantenimiento" }));
        combo_tipo_factura.setFocusable(false);
        combo_tipo_factura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_tipo_facturaActionPerformed(evt);
            }
        });

        filtro_agregar.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        filtro_agregar.setText("Filtro");

        combo_criterio_busqueda.setBackground(new java.awt.Color(255, 255, 255));
        combo_criterio_busqueda.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        combo_criterio_busqueda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Num. Factura", "Fecha", "Nombre Cliente" }));
        combo_criterio_busqueda.setFocusable(false);
        combo_criterio_busqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_criterio_busquedaActionPerformed(evt);
            }
        });

        box_busqueda.setBackground(new java.awt.Color(255, 255, 255));
        box_busqueda.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        box_busqueda.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        button_buscar_factura.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        button_buscar_factura.setText("B U S C A R");
        button_buscar_factura.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        button_buscar_factura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_buscar_facturaActionPerformed(evt);
            }
        });

        text_buscar_agregar.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        text_buscar_agregar.setText("Buscar una factura");

        tabla_resultado.setBackground(new java.awt.Color(255, 255, 255));
        tabla_resultado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabla_resultado.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tabla_resultado.setForeground(new java.awt.Color(0, 0, 0));
        tabla_resultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Num. Fact", "Cod. Cliente", "Recibido", "Estado", "Subtotal", "IVA (13%)", "Total", "Cod. Art", "Cantidad", "Precio (und)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_resultado.setToolTipText("");
        tabla_resultado.setFocusable(false);
        tabla_resultado.setGridColor(new java.awt.Color(0, 0, 0));
        tabla_resultado.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tabla_resultado.setShowGrid(true);
        tabla_resultado.getTableHeader().setResizingAllowed(false);
        tabla_resultado.getTableHeader().setReorderingAllowed(false);
        tabla_resultado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_resultadoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_resultado);
        if (tabla_resultado.getColumnModel().getColumnCount() > 0) {
            tabla_resultado.getColumnModel().getColumn(0).setResizable(false);
            tabla_resultado.getColumnModel().getColumn(1).setResizable(false);
            tabla_resultado.getColumnModel().getColumn(2).setResizable(false);
            tabla_resultado.getColumnModel().getColumn(3).setResizable(false);
            tabla_resultado.getColumnModel().getColumn(4).setResizable(false);
            tabla_resultado.getColumnModel().getColumn(5).setResizable(false);
            tabla_resultado.getColumnModel().getColumn(6).setResizable(false);
            tabla_resultado.getColumnModel().getColumn(7).setResizable(false);
            tabla_resultado.getColumnModel().getColumn(8).setResizable(false);
            tabla_resultado.getColumnModel().getColumn(9).setResizable(false);
        }

        button_anular_factura.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        button_anular_factura.setForeground(new java.awt.Color(204, 0, 51));
        button_anular_factura.setText("ANULAR FACTURA");
        button_anular_factura.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        button_anular_factura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_anular_facturaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout modificarPanelLayout = new javax.swing.GroupLayout(modificarPanel);
        modificarPanel.setLayout(modificarPanelLayout);
        modificarPanelLayout.setHorizontalGroup(
            modificarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modificarPanelLayout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(modificarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(modificarPanelLayout.createSequentialGroup()
                        .addComponent(label_tipo_factura)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combo_tipo_factura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filtro_agregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combo_criterio_busqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(modificarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(text_buscar_agregar)
                            .addGroup(modificarPanelLayout.createSequentialGroup()
                                .addComponent(box_busqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button_buscar_factura, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 966, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_anular_factura, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );
        modificarPanelLayout.setVerticalGroup(
            modificarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modificarPanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(text_buscar_agregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(modificarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(box_busqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_criterio_busqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_buscar_factura, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filtro_agregar)
                    .addComponent(combo_tipo_factura, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_tipo_factura))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(button_anular_factura, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(197, Short.MAX_VALUE))
        );

        SubFrameContainer.add(modificarPanel, "card4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(funciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SubFrameContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(funciones, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SubFrameContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Agregar fact action performed.
     *
     * @param evt the evt
     */
    private void agregar_factActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar_factActionPerformed
        // Mostrar el SubFrame de "agregar cliente"
        java.awt.CardLayout layout = (java.awt.CardLayout) SubFrameContainer.getLayout();
        layout.show(SubFrameContainer, "agregarPanel");
    }//GEN-LAST:event_agregar_factActionPerformed

    /**
     * Modificar fact action performed.
     *
     * @param evt the evt
     */
    private void modificar_factActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificar_factActionPerformed
        // Mostrar el SubFrame de "modificar cliente"
        java.awt.CardLayout layout = (java.awt.CardLayout) SubFrameContainer.getLayout();
        layout.show(SubFrameContainer, "modificarPanel");
    }//GEN-LAST:event_modificar_factActionPerformed

    /**
     * Salir action performed.
     *
     * @param evt the evt
     */
    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed

             // Cierra el frame actual
            this.dispose(); 

            // Abre el nuevo frame
            MenuOpciones opciones = new MenuOpciones(); // Reemplaza con el nombre de tu clase para el nuevo frame
            opciones.setVisible(true);
            opciones.setLocationRelativeTo(this);
    }//GEN-LAST:event_salirActionPerformed

    /**
     * Facturar producto action performed.
     *
     * @param evt the evt
     */
    private void facturar_productoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facturar_productoActionPerformed
        // Validar que existan productos para facturar
        Archivo archivo = new Archivo();
        String ruta = "productos.json";
        Producto[] productos = (Producto[]) archivo.leerArchivo(ruta, Producto[].class);
        if (productos == null || productos.length == 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "No existen productos para facturar. Agregue primero un producto", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        VentanaFacturacionProd ventana = new VentanaFacturacionProd();
        ventana.setVisible(true);
        ventana.setLocationRelativeTo(this);
    }//GEN-LAST:event_facturar_productoActionPerformed

    /**
     * Button buscar factura action performed.
     *
     * @param evt the evt
     */
    private void button_buscar_facturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_buscar_facturaActionPerformed
        String tipoFactura = (String) combo_tipo_factura.getSelectedItem();
        String criterio = (String) combo_criterio_busqueda.getSelectedItem();
        String valor = box_busqueda.getText().trim();

        if (valor.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese un valor de búsqueda.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Buscar facturas
        List<Factura> resultados = BuscarFactura.buscarFactura(tipoFactura, criterio, valor);

        // Limpiar la tabla antes de llenar nuevos datos
        DefaultTableModel model = (DefaultTableModel) tabla_resultado.getModel();
        model.setRowCount(0);

        // Agregar resultados a la tabla
        for (Factura factura : resultados) {
            // Obtener datos del encabezado
            EncabezadoFactura encabezado = factura.getEncabezado();

            // Obtener detalle (puede haber más de un artículo por factura)
            for (DetalleFactura detalle : factura.getDetalles()) {
                estado = encabezado.getEstado();
                model.addRow(new Object[]{
                    encabezado.getNumeroFactura(),
                    encabezado.getCodigoCliente(),
                    encabezado.getFechaRecibido(),
                    encabezado.getEstado(),
                    encabezado.getSubtotal(),
                    encabezado.getImpuesto(),
                    encabezado.getTotal(),
                    detalle.getCodigoArticulo(),
                    detalle.getCantidad(),
                    detalle.getPrecioUnitario(),
                    detalle.getTotal()
                });
                
            }
        }

        if (resultados.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No se encontraron facturas.", "Información", JOptionPane.INFORMATION_MESSAGE);
        }

        // Ocultar el botón de anular hasta que se seleccione una fila
        button_anular_factura.setVisible(false);
    }//GEN-LAST:event_button_buscar_facturaActionPerformed

    /**
     * Tabla resultado mouse clicked.
     *
     * @param evt the evt
     */
    private void tabla_resultadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_resultadoMouseClicked
        int filaSeleccionada = tabla_resultado.getSelectedRow();
    
        // Si se selecciona una fila, mostrar el botón de anulación
        if (filaSeleccionada != -1) {
            button_anular_factura.setVisible(true);
        }
    }//GEN-LAST:event_tabla_resultadoMouseClicked

    /**
     * Combo criterio busqueda action performed.
     *
     * @param evt the evt
     */
    private void combo_criterio_busquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_criterio_busquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_criterio_busquedaActionPerformed

    /**
     * Facturar servicio action performed.
     *
     * @param evt the evt
     */
    private void facturar_servicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facturar_servicioActionPerformed
        // Validar que existan servicios para facturar
        Archivo archivo = new Archivo();
        String ruta = "mantenimiento.json";
        Mantenimiento[] servicios = (Mantenimiento[]) archivo.leerArchivo(ruta, Mantenimiento[].class);
        if (servicios == null || servicios.length == 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "No existen servicios para facturar. Agregue primero un servicio", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        VentanaFacturacionMant ventana = new VentanaFacturacionMant();
        ventana.setVisible(true);
        ventana.setLocationRelativeTo(this);
    }//GEN-LAST:event_facturar_servicioActionPerformed

    /**
     * Combo tipo factura action performed.
     *
     * @param evt the evt
     */
    private void combo_tipo_facturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_tipo_facturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_tipo_facturaActionPerformed

    /**
     * Button anular factura action performed.
     *
     * @param evt the evt
     */
    private void button_anular_facturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_anular_facturaActionPerformed
        int filaSeleccionada = tabla_resultado.getSelectedRow();
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione una factura para anular.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (estado.equals("Anulado")) {
            javax.swing.JOptionPane.showMessageDialog(this, "La factura ya está anulada", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        int numeroFactura = (int) tabla_resultado.getValueAt(filaSeleccionada, 0);
        String tipoFactura = (String) combo_tipo_factura.getSelectedItem();

        int confirmacion = JOptionPane.showConfirmDialog(this, 
            "¿Está seguro de que desea anular la factura " + numeroFactura + "?", 
            "Confirmar Anulación", JOptionPane.YES_NO_OPTION);
    
        if (confirmacion == JOptionPane.YES_OPTION) {
            if (UtilidadesFacturas.anularFactura(numeroFactura, tipoFactura)) {
                button_buscar_facturaActionPerformed(null); // Refrescar la tabla después de la anulación
            }
        }
    }//GEN-LAST:event_button_anular_facturaActionPerformed
    
    /**
     * Form window opened.
     *
     * @param evt the evt
     */
    // Método para establecer el ícono del programa y un título de ventana
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        setTitle("Facturación de productos y servicios");
        setIconImage(new ImageIcon(getClass().getResource("/imagenes/icono_programa.png")).getImage());
    }//GEN-LAST:event_formWindowOpened

    /**
     * Restablecer panel.
     *
     * @param nombrePanel the nombre panel
     */
    // Método para refrescar un panel
    public void restablecerPanel(String nombrePanel) {
        java.awt.CardLayout layout = (java.awt.CardLayout) SubFrameContainer.getLayout();
        layout.show(SubFrameContainer, nombrePanel);

        // Forzar actualización visual para reflejar los cambios
        SubFrameContainer.revalidate();
        SubFrameContainer.repaint();
    }
    
    
    
    /**
     * The main method.
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Facturacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Facturacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Facturacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Facturacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Facturacion().setVisible(true);
            }
        });
    }

    /** The Sub frame container. */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel SubFrameContainer;
    
    /** The agregar panel. */
    private javax.swing.JPanel agregarPanel;
    
    /** The agregar fact. */
    private javax.swing.JButton agregar_fact;
    
    /** The bienvenida label. */
    private javax.swing.JLabel bienvenidaLabel;
    
    /** The bienvenida label 1. */
    private javax.swing.JLabel bienvenidaLabel1;
    
    /** The bienvenida panel. */
    private javax.swing.JPanel bienvenidaPanel;
    
    /** The box busqueda. */
    private javax.swing.JTextField box_busqueda;
    
    /** The button anular factura. */
    private javax.swing.JButton button_anular_factura;
    
    /** The button buscar factura. */
    private javax.swing.JButton button_buscar_factura;
    
    /** The combo criterio busqueda. */
    private javax.swing.JComboBox<String> combo_criterio_busqueda;
    
    /** The combo tipo factura. */
    private javax.swing.JComboBox<String> combo_tipo_factura;
    
    /** The facturar producto. */
    private javax.swing.JButton facturar_producto;
    
    /** The facturar servicio. */
    private javax.swing.JButton facturar_servicio;
    
    /** The filtro agregar. */
    private javax.swing.JLabel filtro_agregar;
    
    /** The funciones. */
    private javax.swing.JToolBar funciones;
    
    /** The j scroll pane 1. */
    private javax.swing.JScrollPane jScrollPane1;
    
    /** The j separator 1. */
    private javax.swing.JToolBar.Separator jSeparator1;
    
    /** The j separator 2. */
    private javax.swing.JToolBar.Separator jSeparator2;
    
    /** The j separator 3. */
    private javax.swing.JToolBar.Separator jSeparator3;
    
    /** The label descripcion prod. */
    private javax.swing.JLabel label_descripcion_prod;
    
    /** The label descripcion prod 1. */
    private javax.swing.JLabel label_descripcion_prod1;
    
    /** The label tipo factura. */
    private javax.swing.JLabel label_tipo_factura;
    
    /** The mant icon. */
    private javax.swing.JLabel mant_icon;
    
    /** The modificar panel. */
    private javax.swing.JPanel modificarPanel;
    
    /** The modificar fact. */
    private javax.swing.JButton modificar_fact;
    
    /** The salir. */
    private javax.swing.JButton salir;
    
    /** The tabla resultado. */
    private javax.swing.JTable tabla_resultado;
    
    /** The text buscar agregar. */
    private javax.swing.JLabel text_buscar_agregar;
    // End of variables declaration//GEN-END:variables
}
