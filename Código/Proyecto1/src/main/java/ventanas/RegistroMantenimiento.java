/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventanas;

// importar librerías de swing
import java.awt.Color;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.DateFormatter;

// Importar las clases de lógica:
import com.mycompany.proyecto1.Archivo;
import com.mycompany.proyecto1.Validador;
import com.mycompany.proyecto1.Utilidades;

// Importar las clases de objetos:
import com.mycompany.proyecto1.Mantenimiento;
import com.mycompany.proyecto1.Producto;


/**
 *
 * @author noe
 */
public class RegistroMantenimiento extends javax.swing.JFrame {

    /**
     * Creates new form MenuOpciones
     */
    public RegistroMantenimiento() {
        initComponents();
        
        // Cargar los clientes en el comboBox de clientes al iniciar el formulario
        Utilidades.cargarClientes("registroClientes.json", combo_codigo_cliente);

        // Aplicar el efecto hover y selección a los botones (TOOLBAR)
        ButtonHoverEffect.applySelectableHoverEffect(agregar_mant);
        ButtonHoverEffect.applySelectableHoverEffect(modificar_mant);
        ButtonHoverEffect.applySelectableHoverEffect(salir);


        // Define los colores
        Color hoverColor = new Color(150,150,150); // Gris claro (al pasar el cursor)
        Color originalColor = Color.BLACK; // Negro (borde inicial)

        // Crear la instancia de ButtonHoverEffect para el efecto
        ButtonHoverEffect hoverEffect = new ButtonHoverEffect(hoverColor, originalColor);

        // Aplica el efecto hover a cada botón (Agregar Producto)
        hoverEffect.applyTo(crear_mant);
        //hoverEffect.applyTo(crear_prod);
        hoverEffect.applyTo(guardar_mant);
        //hoverEffect.applyTo(guardar_art);
        
        // Aplica el efecto hover a cada botón (Modificar Productoi)
        hoverEffect.applyTo(button_buscar_modificar);
        

        // Registrar los paneles en el CardLayout
        SubFrameContainer.add(agregarPanel, "agregarPanel");
        SubFrameContainer.add(modificarPanel_mant, "modificarPanel");

        // Ocultar los paneles de opcion de "agregar productos"
        opcionesAgregarMant.setVisible(false);
        //opcionesProducto.setVisible(false);
        
        // Mostrar la bienvenida al inicio
        SubFrameContainer.add(bienvenidaPanel, "bienvenidaPanel");
        java.awt.CardLayout layout = (java.awt.CardLayout) SubFrameContainer.getLayout();
        layout.show(SubFrameContainer, "bienvenidaPanel");
        
        // Configurar los campos de fecha
        Utilidades.configurarCampoFecha(formatt_fecha_recibido);
        Utilidades.configurarCampoFecha(formatt_fecha_entrega);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        funciones = new javax.swing.JToolBar();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        agregar_mant = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        modificar_mant = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        salir = new javax.swing.JButton();
        SubFrameContainer = new javax.swing.JPanel();
        bienvenidaPanel = new javax.swing.JPanel();
        bienvenidaLabel = new javax.swing.JLabel();
        bienvenidaLabel1 = new javax.swing.JLabel();
        mant_icon = new javax.swing.JLabel();
        agregarPanel = new javax.swing.JPanel();
        crear_mant = new javax.swing.JButton();
        opcionesAgregarMant = new javax.swing.JPanel();
        codigo_servicio = new javax.swing.JLabel();
        box_codigo_mant = new javax.swing.JTextField();
        label_cliente = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        label_marca_bici = new javax.swing.JLabel();
        box_marca_bici = new javax.swing.JTextField();
        label_precio_bici = new javax.swing.JLabel();
        box_precio_bici = new javax.swing.JTextField();
        label_descrip_bici = new javax.swing.JLabel();
        box_descrip_bici = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        label_recibido = new javax.swing.JLabel();
        formatt_fecha_recibido = new javax.swing.JFormattedTextField();
        label_entrega = new javax.swing.JLabel();
        formatt_fecha_entrega = new javax.swing.JFormattedTextField();
        label_observaciones = new javax.swing.JLabel();
        box_observaciones = new javax.swing.JTextField();
        guardar_mant = new javax.swing.JButton();
        combo_codigo_cliente = new javax.swing.JComboBox<>();
        modificarPanel_mant = new javax.swing.JPanel();
        filtro_agregar = new javax.swing.JLabel();
        combo_filtro_agregar = new javax.swing.JComboBox<>();
        buscador_agregar = new javax.swing.JTextField();
        button_buscar_modificar = new javax.swing.JButton();
        text_buscar_agregar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_resultado = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1000, 800));
        setMinimumSize(new java.awt.Dimension(1000, 800));
        setResizable(false);
        setSize(new java.awt.Dimension(1000, 800));

        funciones.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        funciones.setFloatable(false);
        funciones.setRollover(true);

        jSeparator1.setEnabled(false);
        jSeparator1.setRequestFocusEnabled(false);
        jSeparator1.setSeparatorSize(new java.awt.Dimension(210, 10));
        funciones.add(jSeparator1);

        agregar_mant.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        agregar_mant.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/add_item.png"))); // NOI18N
        agregar_mant.setText("Agregar mantenimiento");
        agregar_mant.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        agregar_mant.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        agregar_mant.setFocusable(false);
        agregar_mant.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        agregar_mant.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        agregar_mant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar_mantActionPerformed(evt);
            }
        });
        funciones.add(agregar_mant);

        jSeparator2.setSeparatorSize(new java.awt.Dimension(25, 10));
        funciones.add(jSeparator2);

        modificar_mant.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        modificar_mant.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/modify.png"))); // NOI18N
        modificar_mant.setText("Modificar/eliminar mantenimiento");
        modificar_mant.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        modificar_mant.setFocusable(false);
        modificar_mant.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        modificar_mant.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        modificar_mant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificar_mantActionPerformed(evt);
            }
        });
        funciones.add(modificar_mant);

        jSeparator3.setSeparatorSize(new java.awt.Dimension(25, 10));
        funciones.add(jSeparator3);

        salir.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/exit.png"))); // NOI18N
        salir.setText("Regresar al menú");
        salir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        salir.setFocusable(false);
        salir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        funciones.add(salir);

        SubFrameContainer.setLayout(new java.awt.CardLayout());

        bienvenidaLabel.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        bienvenidaLabel.setText("¡Bienvenido al menú de registro de mantenimiento!");

        bienvenidaLabel1.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        bienvenidaLabel1.setText("Elija una opción para comenzar");

        mant_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/tools_1.png"))); // NOI18N

        javax.swing.GroupLayout bienvenidaPanelLayout = new javax.swing.GroupLayout(bienvenidaPanel);
        bienvenidaPanel.setLayout(bienvenidaPanelLayout);
        bienvenidaPanelLayout.setHorizontalGroup(
            bienvenidaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bienvenidaPanelLayout.createSequentialGroup()
                .addGap(0, 48, Short.MAX_VALUE)
                .addComponent(bienvenidaLabel)
                .addGap(45, 45, 45))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bienvenidaPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(bienvenidaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bienvenidaPanelLayout.createSequentialGroup()
                        .addComponent(bienvenidaLabel1)
                        .addGap(207, 207, 207))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bienvenidaPanelLayout.createSequentialGroup()
                        .addComponent(mant_icon)
                        .addGap(468, 468, 468))))
        );
        bienvenidaPanelLayout.setVerticalGroup(
            bienvenidaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bienvenidaPanelLayout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(bienvenidaLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bienvenidaLabel1)
                .addGap(18, 18, 18)
                .addComponent(mant_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(333, Short.MAX_VALUE))
        );

        SubFrameContainer.add(bienvenidaPanel, "card2");

        crear_mant.setFont(new java.awt.Font("Century Gothic", 3, 24)); // NOI18N
        crear_mant.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/wrench.png"))); // NOI18N
        crear_mant.setText("Agregar mantenimiento");
        crear_mant.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        crear_mant.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        crear_mant.setFocusable(false);
        crear_mant.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        crear_mant.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        crear_mant.setIconTextGap(60);
        crear_mant.setMaximumSize(new java.awt.Dimension(560, 79));
        crear_mant.setMinimumSize(new java.awt.Dimension(560, 79));
        crear_mant.setPreferredSize(new java.awt.Dimension(560, 79));
        crear_mant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crear_mantActionPerformed(evt);
            }
        });

        opcionesAgregarMant.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        codigo_servicio.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        codigo_servicio.setText("Código servicio");

        box_codigo_mant.setEditable(false);
        box_codigo_mant.setBackground(new java.awt.Color(255, 255, 255));
        box_codigo_mant.setFont(new java.awt.Font("Century Gothic", 3, 14)); // NOI18N
        box_codigo_mant.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        box_codigo_mant.setText(" ");
        box_codigo_mant.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        box_codigo_mant.setEnabled(false);
        box_codigo_mant.setSelectionColor(new java.awt.Color(0, 0, 0));
        box_codigo_mant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_codigo_mantActionPerformed(evt);
            }
        });

        label_cliente.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        label_cliente.setText("Código cliente");

        label_marca_bici.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        label_marca_bici.setText("Marca bicicleta");

        box_marca_bici.setBackground(new java.awt.Color(255, 255, 255));
        box_marca_bici.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        box_marca_bici.setToolTipText("");
        box_marca_bici.setActionCommand("<Not Set>");
        box_marca_bici.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        box_marca_bici.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        box_marca_bici.setSelectionColor(new java.awt.Color(0, 0, 0));
        box_marca_bici.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_marca_biciActionPerformed(evt);
            }
        });

        label_precio_bici.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        label_precio_bici.setText("Precio bicicleta");

        box_precio_bici.setBackground(new java.awt.Color(255, 255, 255));
        box_precio_bici.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        box_precio_bici.setToolTipText("");
        box_precio_bici.setActionCommand("<Not Set>");
        box_precio_bici.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        box_precio_bici.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        box_precio_bici.setSelectionColor(new java.awt.Color(0, 0, 0));
        box_precio_bici.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_precio_biciActionPerformed(evt);
            }
        });

        label_descrip_bici.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        label_descrip_bici.setText("Descripción de la bicicleta");

        box_descrip_bici.setBackground(new java.awt.Color(255, 255, 255));
        box_descrip_bici.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        box_descrip_bici.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        box_descrip_bici.setSelectionColor(new java.awt.Color(0, 0, 0));
        box_descrip_bici.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_descrip_biciActionPerformed(evt);
            }
        });

        label_recibido.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        label_recibido.setText("Fecha de recibido");

        formatt_fecha_recibido.setBackground(new java.awt.Color(255, 255, 255));
        formatt_fecha_recibido.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        formatt_fecha_recibido.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        formatt_fecha_recibido.setText("dd/mm/yyyy");
        formatt_fecha_recibido.setToolTipText("");
        formatt_fecha_recibido.setActionCommand("<Not Set>");
        formatt_fecha_recibido.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        formatt_fecha_recibido.setMaximumSize(new java.awt.Dimension(95, 25));
        formatt_fecha_recibido.setMinimumSize(new java.awt.Dimension(95, 25));
        formatt_fecha_recibido.setPreferredSize(new java.awt.Dimension(95, 25));
        formatt_fecha_recibido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formatt_fecha_recibidoActionPerformed(evt);
            }
        });

        label_entrega.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        label_entrega.setText("Fecha de entrega");

        formatt_fecha_entrega.setBackground(new java.awt.Color(255, 255, 255));
        formatt_fecha_entrega.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        formatt_fecha_entrega.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        formatt_fecha_entrega.setText("dd/mm/yyyy");
        formatt_fecha_entrega.setToolTipText("");
        formatt_fecha_entrega.setActionCommand("<Not Set>");
        formatt_fecha_entrega.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        formatt_fecha_entrega.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formatt_fecha_entregaActionPerformed(evt);
            }
        });

        label_observaciones.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        label_observaciones.setText("Observaciones");

        box_observaciones.setBackground(new java.awt.Color(255, 255, 255));
        box_observaciones.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        box_observaciones.setToolTipText("");
        box_observaciones.setActionCommand("<Not Set>");
        box_observaciones.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        box_observaciones.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        box_observaciones.setSelectionColor(new java.awt.Color(0, 0, 0));
        box_observaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_observacionesActionPerformed(evt);
            }
        });

        guardar_mant.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        guardar_mant.setText("G U A R D A R");
        guardar_mant.setBorder(null);
        guardar_mant.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        guardar_mant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardar_mantActionPerformed(evt);
            }
        });

        combo_codigo_cliente.setBackground(new java.awt.Color(255, 255, 255));
        combo_codigo_cliente.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        combo_codigo_cliente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        combo_codigo_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_codigo_clienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout opcionesAgregarMantLayout = new javax.swing.GroupLayout(opcionesAgregarMant);
        opcionesAgregarMant.setLayout(opcionesAgregarMantLayout);
        opcionesAgregarMantLayout.setHorizontalGroup(
            opcionesAgregarMantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opcionesAgregarMantLayout.createSequentialGroup()
                .addGroup(opcionesAgregarMantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(opcionesAgregarMantLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(opcionesAgregarMantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(opcionesAgregarMantLayout.createSequentialGroup()
                                .addGroup(opcionesAgregarMantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(label_marca_bici)
                                    .addComponent(label_precio_bici))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(opcionesAgregarMantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(box_marca_bici, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(box_precio_bici, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(opcionesAgregarMantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(box_descrip_bici)
                                    .addComponent(label_descrip_bici, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(opcionesAgregarMantLayout.createSequentialGroup()
                                .addComponent(codigo_servicio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(box_codigo_mant, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(label_cliente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(combo_codigo_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(opcionesAgregarMantLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(opcionesAgregarMantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(opcionesAgregarMantLayout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(guardar_mant, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(opcionesAgregarMantLayout.createSequentialGroup()
                        .addGroup(opcionesAgregarMantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(label_recibido)
                            .addComponent(label_observaciones))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(opcionesAgregarMantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(box_observaciones)
                            .addGroup(opcionesAgregarMantLayout.createSequentialGroup()
                                .addComponent(formatt_fecha_recibido, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(label_entrega)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(formatt_fecha_entrega, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        opcionesAgregarMantLayout.setVerticalGroup(
            opcionesAgregarMantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opcionesAgregarMantLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(opcionesAgregarMantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigo_servicio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(box_codigo_mant, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_codigo_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(opcionesAgregarMantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_marca_bici, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(box_marca_bici, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_descrip_bici, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(opcionesAgregarMantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(opcionesAgregarMantLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(opcionesAgregarMantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_precio_bici, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(box_precio_bici, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(opcionesAgregarMantLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(box_descrip_bici)))
                .addGap(24, 24, 24)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(opcionesAgregarMantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_recibido, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formatt_fecha_recibido, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_entrega, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formatt_fecha_entrega, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(opcionesAgregarMantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(box_observaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_observaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(guardar_mant, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout agregarPanelLayout = new javax.swing.GroupLayout(agregarPanel);
        agregarPanel.setLayout(agregarPanelLayout);
        agregarPanelLayout.setHorizontalGroup(
            agregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agregarPanelLayout.createSequentialGroup()
                .addGap(212, 212, 212)
                .addGroup(agregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(opcionesAgregarMant, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(crear_mant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(222, Short.MAX_VALUE))
        );
        agregarPanelLayout.setVerticalGroup(
            agregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agregarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(crear_mant, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(opcionesAgregarMant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(125, Short.MAX_VALUE))
        );

        SubFrameContainer.add(agregarPanel, "card2");

        filtro_agregar.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        filtro_agregar.setText("Filtro");

        combo_filtro_agregar.setBackground(new java.awt.Color(255, 255, 255));
        combo_filtro_agregar.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        combo_filtro_agregar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Codigo", "Nombre" }));
        combo_filtro_agregar.setFocusable(false);
        combo_filtro_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_filtro_agregarActionPerformed(evt);
            }
        });

        buscador_agregar.setBackground(new java.awt.Color(255, 255, 255));
        buscador_agregar.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        buscador_agregar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        button_buscar_modificar.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        button_buscar_modificar.setText("B U S C A R");
        button_buscar_modificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        button_buscar_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_buscar_modificarActionPerformed(evt);
            }
        });

        text_buscar_agregar.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        text_buscar_agregar.setText("Buscar un cliente para modificar");

        tabla_resultado.setBackground(new java.awt.Color(255, 255, 255));
        tabla_resultado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabla_resultado.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tabla_resultado.setForeground(new java.awt.Color(0, 0, 0));
        tabla_resultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod. Servicio", "Cod. Cliente", "Marca", "Descripción", "Precio", "F. Recibido", "F. Entrega", "Observación", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_resultado.setToolTipText("");
        tabla_resultado.setFocusable(false);
        tabla_resultado.setGridColor(new java.awt.Color(0, 0, 0));
        tabla_resultado.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tabla_resultado.setShowGrid(true);
        tabla_resultado.getTableHeader().setResizingAllowed(false);
        tabla_resultado.getTableHeader().setReorderingAllowed(false);
        tabla_resultado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_resultadoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_resultado);
        if (tabla_resultado.getColumnModel().getColumnCount() > 0) {
            tabla_resultado.getColumnModel().getColumn(0).setResizable(false);
            tabla_resultado.getColumnModel().getColumn(1).setResizable(false);
            tabla_resultado.getColumnModel().getColumn(2).setResizable(false);
            tabla_resultado.getColumnModel().getColumn(3).setResizable(false);
            tabla_resultado.getColumnModel().getColumn(4).setResizable(false);
            tabla_resultado.getColumnModel().getColumn(5).setResizable(false);
            tabla_resultado.getColumnModel().getColumn(6).setResizable(false);
            tabla_resultado.getColumnModel().getColumn(7).setResizable(false);
            tabla_resultado.getColumnModel().getColumn(8).setResizable(false);
        }

        javax.swing.GroupLayout modificarPanel_mantLayout = new javax.swing.GroupLayout(modificarPanel_mant);
        modificarPanel_mant.setLayout(modificarPanel_mantLayout);
        modificarPanel_mantLayout.setHorizontalGroup(
            modificarPanel_mantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modificarPanel_mantLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(filtro_agregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo_filtro_agregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(modificarPanel_mantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(text_buscar_agregar)
                    .addGroup(modificarPanel_mantLayout.createSequentialGroup()
                        .addComponent(buscador_agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_buscar_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(119, 119, 119))
            .addGroup(modificarPanel_mantLayout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 880, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        modificarPanel_mantLayout.setVerticalGroup(
            modificarPanel_mantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modificarPanel_mantLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(text_buscar_agregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(modificarPanel_mantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscador_agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_filtro_agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_buscar_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filtro_agregar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(253, Short.MAX_VALUE))
        );

        SubFrameContainer.add(modificarPanel_mant, "card4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(funciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SubFrameContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(funciones, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SubFrameContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregar_mantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar_mantActionPerformed
        // Mostrar el SubFrame de "agregar cliente"
        java.awt.CardLayout layout = (java.awt.CardLayout) SubFrameContainer.getLayout();
        layout.show(SubFrameContainer, "agregarPanel");
    }//GEN-LAST:event_agregar_mantActionPerformed

    private void modificar_mantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificar_mantActionPerformed
        // Mostrar el SubFrame de "modificar cliente"
        java.awt.CardLayout layout = (java.awt.CardLayout) SubFrameContainer.getLayout();
        layout.show(SubFrameContainer, "modificarPanel");
    }//GEN-LAST:event_modificar_mantActionPerformed

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed

             // Cierra el frame actual
            this.dispose(); 

            // Abre el nuevo frame
            MenuOpciones opciones = new MenuOpciones(); // Reemplaza con el nombre de tu clase para el nuevo frame
            opciones.setVisible(true);
            opciones.setLocationRelativeTo(this);
    }//GEN-LAST:event_salirActionPerformed

    private void crear_mantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crear_mantActionPerformed

        boolean isVisible = opcionesAgregarMant.isVisible();
        opcionesAgregarMant.setVisible(!isVisible);

        // Si las opciones se hacen visibles, cargar el siguiente código
        if (!isVisible) {
            String ruta = "mantenimiento.json";
            Archivo archivo = new Archivo();

            try {
                // Usar el método de Archivo para obtener el siguiente código
                int siguienteCodigo = archivo.obtenerSiguienteCodigo(ruta, Mantenimiento[].class);

                // Mostrar el código en el campo correspondiente
                box_codigo_mant.setText(String.valueOf(siguienteCodigo));

            } catch (Exception e) {
                box_codigo_mant.setText("AUTOMÁTICO");
                javax.swing.JOptionPane.showMessageDialog(this, "Error al cargar el siguiente código: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
    }

    this.revalidate();
    this.repaint();
    }//GEN-LAST:event_crear_mantActionPerformed

    private void box_codigo_mantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_codigo_mantActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_box_codigo_mantActionPerformed

    private void button_buscar_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_buscar_modificarActionPerformed
        String ruta = "productos.json";
        Archivo archivo = new Archivo();

        try {
            // Obtener el criterio seleccionado y el valor ingresado
            String criterio = combo_filtro_agregar.getSelectedItem().toString();
            String valor = buscador_agregar.getText().trim();

            if (valor.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, "Por favor, ingrese un valor para buscar.", "Advertencia", javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Leer productos del archivo
            Producto[] productos = (Producto[]) archivo.leerArchivo(ruta, Producto[].class);
            if (productos == null || productos.length == 0) {
                javax.swing.JOptionPane.showMessageDialog(this, "No hay productos registrados.", "Información", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            // Filtrar productos según el criterio
            List<Producto> resultados = new ArrayList<>();
            for (Producto producto : productos) {
                if ("Codigo".equals(criterio) && String.valueOf(producto.getCodigoArticulo()).equals(valor)) {
                    resultados.add(producto);
                } else if ("Nombre".equals(criterio) && producto.getNombre().toLowerCase().contains(valor.toLowerCase())) {
                    resultados.add(producto);
                }
            }

            // Verificar si hay resultados
            if (resultados.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, "No se encontraron productos.", "Información", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            }

            // Cargar resultados en la tabla
            Utilidades.cargarResultadosEnTabla((DefaultTableModel) tabla_resultado.getModel(), resultados);

        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error al realizar la búsqueda: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_button_buscar_modificarActionPerformed

    private void guardar_mantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardar_mantActionPerformed

        String ruta = "mantenimiento.json";
        Archivo archivo = new Archivo();

        try {
            // Validar los campos
            String codigoClienteTexto = (String) combo_codigo_cliente.getSelectedItem();
            if (codigoClienteTexto == null || codigoClienteTexto.trim().isEmpty() || "No hay clientes".equals(codigoClienteTexto)) {
                javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar un cliente.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Extraer el código del cliente del formato "1 - Juan"
            String codigoClienteSolo = codigoClienteTexto.split(" - ")[0].trim();
            int codigoCliente = Integer.parseInt(codigoClienteSolo);

            String marcaBici = box_marca_bici.getText().trim();
            if (!Validador.validarAlfabetico(marcaBici)) {
                javax.swing.JOptionPane.showMessageDialog(this, "La marca de la bicicleta debe contener solo letras.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }

            String precioTexto = box_precio_bici.getText().trim();
            if (!Validador.validarNumerico(precioTexto)) {
                javax.swing.JOptionPane.showMessageDialog(this, "El precio debe ser un número válido.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }
            int precio = Integer.parseInt(precioTexto);

            String descripcion = box_descrip_bici.getText().trim();

            String fechaRecibido = formatt_fecha_recibido.getText().trim();
            String fechaEntrega = formatt_fecha_entrega.getText().trim();

            // Generar un código único para el mantenimiento
            int codigoMantenimiento = archivo.obtenerSiguienteCodigo(ruta, Mantenimiento[].class);

            Mantenimiento nuevoMantenimiento = new Mantenimiento(
                codigoMantenimiento,
                codigoCliente,
                marcaBici,
                descripcion,
                precio,
                fechaRecibido,
                fechaEntrega,
                "Sin observaciones",
                "Abierto"
            );

            // Leer los mantenimientos existentes
            Mantenimiento[] mantenimientos = (Mantenimiento[]) archivo.leerArchivo(ruta, Mantenimiento[].class);
            List<Mantenimiento> listaMantenimientos = mantenimientos != null 
                ? new ArrayList<>(List.of(mantenimientos)) 
                : new ArrayList<>();

            // Agregar el nuevo mantenimiento a la lista
            listaMantenimientos.add(nuevoMantenimiento);

            // Guardar la lista actualizada en el archivo JSON
            archivo.guardarArchivo(ruta, listaMantenimientos);

            javax.swing.JOptionPane.showMessageDialog(this, "Mantenimiento guardado exitosamente.", "Éxito", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            // Limpiar los campos
            box_marca_bici.setText("");
            box_precio_bici.setText("");
            box_descrip_bici.setText("");
            formatt_fecha_recibido.setText("dd/MM/yyyy");
            formatt_fecha_entrega.setText("dd/MM/yyyy");

        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error al guardar el mantenimiento: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_guardar_mantActionPerformed

    private void tabla_resultadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_resultadoMouseClicked
        if (evt.getClickCount() == 2 && tabla_resultado.getSelectedRow() != -1) {
            int selectedRow = tabla_resultado.getSelectedRow();
            int codigoArticulo = (int) tabla_resultado.getValueAt(selectedRow, 0);
            Archivo archivo = new Archivo();
            Producto[] productos = (Producto[]) archivo.leerArchivo("productos.json", Producto[].class);

            if (productos != null) {
                for (Producto producto : productos) {
                    if (producto.getCodigoArticulo() == codigoArticulo) {
                        VentanaModificar ventana = new VentanaModificar(producto);
                        ventana.setVisible(true);
                        ventana.setLocationRelativeTo(this);
                        break;
                    }
                }
            }
        }
    }//GEN-LAST:event_tabla_resultadoMouseClicked

    private void box_marca_biciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_marca_biciActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_box_marca_biciActionPerformed

    private void box_descrip_biciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_descrip_biciActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_box_descrip_biciActionPerformed

    private void formatt_fecha_recibidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formatt_fecha_recibidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formatt_fecha_recibidoActionPerformed

    private void formatt_fecha_entregaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formatt_fecha_entregaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formatt_fecha_entregaActionPerformed

    private void combo_filtro_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_filtro_agregarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_filtro_agregarActionPerformed

    private void box_precio_biciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_precio_biciActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_box_precio_biciActionPerformed

    private void box_observacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_observacionesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_box_observacionesActionPerformed

    private void combo_codigo_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_codigo_clienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_codigo_clienteActionPerformed

    // Método para refrescar un panel
    public void restablecerPanel(String nombrePanel) {
        java.awt.CardLayout layout = (java.awt.CardLayout) SubFrameContainer.getLayout();
        layout.show(SubFrameContainer, nombrePanel);

        // Forzar actualización visual para reflejar los cambios
        SubFrameContainer.revalidate();
        SubFrameContainer.repaint();
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroMantenimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroMantenimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroMantenimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroMantenimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroMantenimiento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel SubFrameContainer;
    private javax.swing.JPanel agregarPanel;
    private javax.swing.JButton agregar_mant;
    private javax.swing.JLabel bienvenidaLabel;
    private javax.swing.JLabel bienvenidaLabel1;
    private javax.swing.JPanel bienvenidaPanel;
    private javax.swing.JTextField box_codigo_mant;
    private javax.swing.JTextField box_descrip_bici;
    private javax.swing.JTextField box_marca_bici;
    private javax.swing.JTextField box_observaciones;
    private javax.swing.JTextField box_precio_bici;
    private javax.swing.JTextField buscador_agregar;
    private javax.swing.JButton button_buscar_modificar;
    private javax.swing.JLabel codigo_servicio;
    private javax.swing.JComboBox<String> combo_codigo_cliente;
    private javax.swing.JComboBox<String> combo_filtro_agregar;
    private javax.swing.JButton crear_mant;
    private javax.swing.JLabel filtro_agregar;
    private javax.swing.JFormattedTextField formatt_fecha_entrega;
    private javax.swing.JFormattedTextField formatt_fecha_recibido;
    private javax.swing.JToolBar funciones;
    private javax.swing.JButton guardar_mant;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JLabel label_cliente;
    private javax.swing.JLabel label_descrip_bici;
    private javax.swing.JLabel label_entrega;
    private javax.swing.JLabel label_marca_bici;
    private javax.swing.JLabel label_observaciones;
    private javax.swing.JLabel label_precio_bici;
    private javax.swing.JLabel label_recibido;
    private javax.swing.JLabel mant_icon;
    private javax.swing.JPanel modificarPanel_mant;
    private javax.swing.JButton modificar_mant;
    private javax.swing.JPanel opcionesAgregarMant;
    private javax.swing.JButton salir;
    private javax.swing.JTable tabla_resultado;
    private javax.swing.JLabel text_buscar_agregar;
    // End of variables declaration//GEN-END:variables
}
