/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change esta licencia
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to editar esta plantilla
 */
package ventanas;

// Importar librerías de Swing y utilidades
import java.awt.Color;
import java.util.List;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

// Importar clases de lógica
import com.mycompany.proyecto1.Archivo;
import com.mycompany.proyecto1.Validador;
import com.mycompany.proyecto1.Utilidades;

// Importar clases de objetos
import com.mycompany.proyecto1.TipoProducto;
import com.mycompany.proyecto1.Producto;
import javax.swing.ImageIcon;

/**
 * Clase que representa la interfaz de registro y modificación de productos.
 *
 * <p>Permite registrar nuevos productos y tipos de productos, así como modificarlos.</p>
 *
 * <p>Cuenta con validaciones de entrada, límites de caracteres y efectos visuales en los botones.</p>
 *
 * @author noe
 */
public class RegistroProductos extends javax.swing.JFrame {

    /**
     * Constructor que inicializa la interfaz de registro de productos.
     *
     * <p>Realiza las siguientes configuraciones iniciales:</p>
     * <ul>
     *   <li>Establece los límites de caracteres en los campos de entrada.</li>
     *   <li>Carga los tipos de productos desde un archivo JSON en el `comboBox`.</li>
     *   <li>Configura los efectos `hover` en los botones para mejorar la experiencia de usuario.</li>
     *   <li>Registra los paneles en el `CardLayout` para navegación entre secciones.</li>
     * </ul>
     */
    public RegistroProductos() {
        initComponents();
        
        // Establecer límites de caracteres en los campos de entrada
        Validador.setLimiteCaracteres(box_nombre_tipo_prod, 50);
        Validador.setLimiteCaracteres(box_nombre_art, 50);
        Validador.setLimiteCaracteres(box_marca_art, 50);
        Validador.setLimiteCaracteres(box_precio_art, 7);
        Validador.setLimiteCaracteres(box_cantidad_art, 3);
    
        // Cargar los tipos de producto en el comboBox al iniciar el formulario
        Utilidades.cargarTiposDeProducto("tiposProductos.json", box_codigo_prod);

        // Aplicar el efecto hover y selección a los botones de la barra de herramientas (TOOLBAR)
        ButtonHoverEffect.applySelectableHoverEffect(agregar_prod);
        ButtonHoverEffect.applySelectableHoverEffect(modificar_prod);
        ButtonHoverEffect.applySelectableHoverEffect(salir);

        // Definir los colores para los efectos hover en los botones
        Color hoverColor = new Color(150, 150, 150); // Gris claro al pasar el cursor
        Color originalColor = Color.BLACK; // Negro por defecto

        // Crear la instancia de ButtonHoverEffect para aplicar el efecto hover
        ButtonHoverEffect hoverEffect = new ButtonHoverEffect(hoverColor, originalColor);

        // Aplicar efecto hover a los botones de agregar productos
        hoverEffect.applyTo(crear_tipo_prod);
        hoverEffect.applyTo(crear_prod);
        hoverEffect.applyTo(guardar_tipo_prod);
        hoverEffect.applyTo(guardar_art);
        
        // Aplicar efecto hover al botón de modificar productos
        hoverEffect.applyTo(button_buscar_modificar);

        // Registrar los paneles en el CardLayout
        SubFrameContainer.add(agregarPanel, "agregarPanel");
        SubFrameContainer.add(modificarPanel, "modificarPanel");

        // Ocultar los paneles de opción de "agregar productos"
        opcionesTipoProducto.setVisible(false);
        opcionesProducto.setVisible(false);
        
        // Mostrar la pantalla de bienvenida al inicio
        SubFrameContainer.add(bienvenidaPanel, "bienvenidaPanel");
        java.awt.CardLayout layout = (java.awt.CardLayout) SubFrameContainer.getLayout();
        layout.show(SubFrameContainer, "bienvenidaPanel");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        funciones = new javax.swing.JToolBar();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        agregar_prod = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        modificar_prod = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        salir = new javax.swing.JButton();
        SubFrameContainer = new javax.swing.JPanel();
        bienvenidaPanel = new javax.swing.JPanel();
        bienvenidaLabel = new javax.swing.JLabel();
        bienvenidaLabel1 = new javax.swing.JLabel();
        ciclista_icon = new javax.swing.JLabel();
        agregarPanel = new javax.swing.JPanel();
        crear_tipo_prod = new javax.swing.JButton();
        crear_prod = new javax.swing.JButton();
        opcionesTipoProducto = new javax.swing.JPanel();
        codigo_defecto1 = new javax.swing.JLabel();
        box_codigo_tipo_prod = new javax.swing.JTextField();
        nombre_prod = new javax.swing.JLabel();
        box_nombre_tipo_prod = new javax.swing.JTextField();
        guardar_tipo_prod = new javax.swing.JButton();
        opcionesProducto = new javax.swing.JPanel();
        codigo_art = new javax.swing.JLabel();
        box_codigo_art = new javax.swing.JTextField();
        codigo_prod = new javax.swing.JLabel();
        box_codigo_prod = new javax.swing.JComboBox<>();
        tipo_art = new javax.swing.JLabel();
        combo_tipo_art = new javax.swing.JComboBox<>();
        tammanio_bici1 = new javax.swing.JLabel();
        combo_tammanio_bici = new javax.swing.JComboBox<>();
        nombre_art = new javax.swing.JLabel();
        box_nombre_art = new javax.swing.JTextField();
        marca_art = new javax.swing.JLabel();
        box_marca_art = new javax.swing.JTextField();
        guardar_art = new javax.swing.JButton();
        marca_art1 = new javax.swing.JLabel();
        box_precio_art = new javax.swing.JTextField();
        marca_art2 = new javax.swing.JLabel();
        box_cantidad_art = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        modificarPanel = new javax.swing.JPanel();
        filtro_agregar = new javax.swing.JLabel();
        combo_filtro_agregar = new javax.swing.JComboBox<>();
        buscador_agregar = new javax.swing.JTextField();
        button_buscar_modificar = new javax.swing.JButton();
        text_buscar_agregar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_resultado = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1000, 800));
        setMinimumSize(new java.awt.Dimension(1000, 800));
        setResizable(false);
        setSize(new java.awt.Dimension(1000, 800));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        funciones.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        funciones.setFloatable(false);
        funciones.setRollover(true);

        jSeparator1.setEnabled(false);
        jSeparator1.setRequestFocusEnabled(false);
        jSeparator1.setSeparatorSize(new java.awt.Dimension(250, 10));
        funciones.add(jSeparator1);

        agregar_prod.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        agregar_prod.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/add_item.png"))); // NOI18N
        agregar_prod.setText("Agregar producto");
        agregar_prod.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        agregar_prod.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        agregar_prod.setFocusable(false);
        agregar_prod.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        agregar_prod.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        agregar_prod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar_prodActionPerformed(evt);
            }
        });
        funciones.add(agregar_prod);

        jSeparator2.setSeparatorSize(new java.awt.Dimension(25, 10));
        funciones.add(jSeparator2);

        modificar_prod.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        modificar_prod.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/modify.png"))); // NOI18N
        modificar_prod.setText("Modificar/eliminar producto");
        modificar_prod.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        modificar_prod.setFocusable(false);
        modificar_prod.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        modificar_prod.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        modificar_prod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificar_prodActionPerformed(evt);
            }
        });
        funciones.add(modificar_prod);

        jSeparator5.setSeparatorSize(new java.awt.Dimension(25, 10));
        funciones.add(jSeparator5);

        salir.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/exit.png"))); // NOI18N
        salir.setText("Regresar al menú");
        salir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        salir.setFocusable(false);
        salir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        salir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        funciones.add(salir);

        SubFrameContainer.setLayout(new java.awt.CardLayout());

        bienvenidaLabel.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        bienvenidaLabel.setText("¡Bienvenido al menú de registro de productos!");

        bienvenidaLabel1.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        bienvenidaLabel1.setText("Elija una opción para comenzar");

        ciclista_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cycling.png"))); // NOI18N

        javax.swing.GroupLayout bienvenidaPanelLayout = new javax.swing.GroupLayout(bienvenidaPanel);
        bienvenidaPanel.setLayout(bienvenidaPanelLayout);
        bienvenidaPanelLayout.setHorizontalGroup(
            bienvenidaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bienvenidaPanelLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(bienvenidaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bienvenidaLabel)
                    .addGroup(bienvenidaPanelLayout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(bienvenidaLabel1))
                    .addGroup(bienvenidaPanelLayout.createSequentialGroup()
                        .addGap(362, 362, 362)
                        .addComponent(ciclista_icon)))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        bienvenidaPanelLayout.setVerticalGroup(
            bienvenidaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bienvenidaPanelLayout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(bienvenidaLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bienvenidaLabel1)
                .addGap(18, 18, 18)
                .addComponent(ciclista_icon)
                .addContainerGap(333, Short.MAX_VALUE))
        );

        SubFrameContainer.add(bienvenidaPanel, "card2");

        crear_tipo_prod.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        crear_tipo_prod.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/new-product.png"))); // NOI18N
        crear_tipo_prod.setText("Crear tipo de producto");
        crear_tipo_prod.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        crear_tipo_prod.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        crear_tipo_prod.setFocusable(false);
        crear_tipo_prod.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        crear_tipo_prod.setIconTextGap(10);
        crear_tipo_prod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crear_tipo_prodActionPerformed(evt);
            }
        });

        crear_prod.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        crear_prod.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/add_product.png"))); // NOI18N
        crear_prod.setText("Crear producto nuevo");
        crear_prod.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        crear_prod.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        crear_prod.setFocusable(false);
        crear_prod.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        crear_prod.setIconTextGap(10);
        crear_prod.setMaximumSize(new java.awt.Dimension(308, 79));
        crear_prod.setMinimumSize(new java.awt.Dimension(308, 79));
        crear_prod.setPreferredSize(new java.awt.Dimension(308, 79));
        crear_prod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crear_prodActionPerformed(evt);
            }
        });

        opcionesTipoProducto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        codigo_defecto1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        codigo_defecto1.setText("Código");

        box_codigo_tipo_prod.setEditable(false);
        box_codigo_tipo_prod.setBackground(new java.awt.Color(255, 255, 255));
        box_codigo_tipo_prod.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        box_codigo_tipo_prod.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        box_codigo_tipo_prod.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        box_codigo_tipo_prod.setEnabled(false);
        box_codigo_tipo_prod.setFocusable(false);
        box_codigo_tipo_prod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_codigo_tipo_prodActionPerformed(evt);
            }
        });

        nombre_prod.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        nombre_prod.setText("Nombre del tipo de producto");

        box_nombre_tipo_prod.setBackground(new java.awt.Color(255, 255, 255));
        box_nombre_tipo_prod.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        box_nombre_tipo_prod.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        box_nombre_tipo_prod.setSelectionColor(new java.awt.Color(0, 0, 0));
        box_nombre_tipo_prod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_nombre_tipo_prodActionPerformed(evt);
            }
        });

        guardar_tipo_prod.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        guardar_tipo_prod.setText("G U A R D A R");
        guardar_tipo_prod.setBorder(null);
        guardar_tipo_prod.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        guardar_tipo_prod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardar_tipo_prodActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout opcionesTipoProductoLayout = new javax.swing.GroupLayout(opcionesTipoProducto);
        opcionesTipoProducto.setLayout(opcionesTipoProductoLayout);
        opcionesTipoProductoLayout.setHorizontalGroup(
            opcionesTipoProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opcionesTipoProductoLayout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(codigo_defecto1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, opcionesTipoProductoLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(box_codigo_tipo_prod, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(opcionesTipoProductoLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(opcionesTipoProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(box_nombre_tipo_prod, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombre_prod))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(opcionesTipoProductoLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(guardar_tipo_prod, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        opcionesTipoProductoLayout.setVerticalGroup(
            opcionesTipoProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opcionesTipoProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(codigo_defecto1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(box_codigo_tipo_prod, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nombre_prod, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(box_nombre_tipo_prod, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(guardar_tipo_prod, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103))
        );

        opcionesProducto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        opcionesProducto.setMaximumSize(new java.awt.Dimension(308, 444));
        opcionesProducto.setMinimumSize(new java.awt.Dimension(308, 444));

        codigo_art.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        codigo_art.setText("Código artículo");

        box_codigo_art.setBackground(new java.awt.Color(255, 255, 255));
        box_codigo_art.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        box_codigo_art.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        box_codigo_art.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        box_codigo_art.setEnabled(false);
        box_codigo_art.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_codigo_artActionPerformed(evt);
            }
        });

        codigo_prod.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        codigo_prod.setText("Código producto");

        box_codigo_prod.setBackground(new java.awt.Color(255, 255, 255));
        box_codigo_prod.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        box_codigo_prod.setBorder(null);
        box_codigo_prod.setFocusable(false);
        box_codigo_prod.setRequestFocusEnabled(false);

        tipo_art.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        tipo_art.setText("Tipo de artículo");

        combo_tipo_art.setBackground(new java.awt.Color(255, 255, 255));
        combo_tipo_art.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        combo_tipo_art.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bicicleta", "Accesorio", "Suplemento" }));
        combo_tipo_art.setBorder(null);
        combo_tipo_art.setFocusable(false);
        combo_tipo_art.setRequestFocusEnabled(false);
        combo_tipo_art.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_tipo_artActionPerformed(evt);
            }
        });

        tammanio_bici1.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        tammanio_bici1.setText("Tamaño (bici)");

        combo_tammanio_bici.setBackground(new java.awt.Color(255, 255, 255));
        combo_tammanio_bici.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        combo_tammanio_bici.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12", "16", "22", "26", "27", "27.5", "29" }));
        combo_tammanio_bici.setBorder(null);
        combo_tammanio_bici.setFocusable(false);
        combo_tammanio_bici.setRequestFocusEnabled(false);
        combo_tammanio_bici.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_tammanio_biciActionPerformed(evt);
            }
        });

        nombre_art.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        nombre_art.setText("Nombre");

        box_nombre_art.setBackground(new java.awt.Color(255, 255, 255));
        box_nombre_art.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        box_nombre_art.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        box_nombre_art.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_nombre_artActionPerformed(evt);
            }
        });

        marca_art.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        marca_art.setText("Marca");

        box_marca_art.setBackground(new java.awt.Color(255, 255, 255));
        box_marca_art.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        box_marca_art.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        box_marca_art.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_marca_artActionPerformed(evt);
            }
        });

        guardar_art.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        guardar_art.setText("G U A R D A R");
        guardar_art.setBorder(null);
        guardar_art.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        guardar_art.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardar_artActionPerformed(evt);
            }
        });

        marca_art1.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        marca_art1.setText("Precio");

        box_precio_art.setBackground(new java.awt.Color(255, 255, 255));
        box_precio_art.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        box_precio_art.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        box_precio_art.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_precio_artActionPerformed(evt);
            }
        });

        marca_art2.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        marca_art2.setText("Cantidad");

        box_cantidad_art.setBackground(new java.awt.Color(255, 255, 255));
        box_cantidad_art.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        box_cantidad_art.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        box_cantidad_art.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_cantidad_artActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout opcionesProductoLayout = new javax.swing.GroupLayout(opcionesProducto);
        opcionesProducto.setLayout(opcionesProductoLayout);
        opcionesProductoLayout.setHorizontalGroup(
            opcionesProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opcionesProductoLayout.createSequentialGroup()
                .addGroup(opcionesProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(opcionesProductoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(opcionesProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator6)
                            .addGroup(opcionesProductoLayout.createSequentialGroup()
                                .addGroup(opcionesProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(opcionesProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(box_nombre_art, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(opcionesProductoLayout.createSequentialGroup()
                                            .addGroup(opcionesProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(codigo_prod)
                                                .addComponent(codigo_art)
                                                .addComponent(tammanio_bici1))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addGroup(opcionesProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(combo_tammanio_bici, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(box_codigo_art, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(combo_tipo_art, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(box_codigo_prod, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(opcionesProductoLayout.createSequentialGroup()
                                            .addComponent(marca_art)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(box_marca_art, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(tipo_art)
                                    .addComponent(nombre_art)
                                    .addComponent(marca_art1)
                                    .addGroup(opcionesProductoLayout.createSequentialGroup()
                                        .addComponent(marca_art2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(opcionesProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(guardar_art, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(opcionesProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(box_cantidad_art, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(box_precio_art, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(opcionesProductoLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jSeparator7)))
                .addContainerGap())
        );
        opcionesProductoLayout.setVerticalGroup(
            opcionesProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opcionesProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(opcionesProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigo_art, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(box_codigo_art, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(opcionesProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigo_prod, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(box_codigo_prod, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(opcionesProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipo_art, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_tipo_art, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(opcionesProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tammanio_bici1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_tammanio_bici, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(opcionesProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombre_art, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(box_nombre_art, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(opcionesProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marca_art, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(box_marca_art, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(opcionesProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marca_art1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(box_precio_art, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(opcionesProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marca_art2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(box_cantidad_art, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(guardar_art, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout agregarPanelLayout = new javax.swing.GroupLayout(agregarPanel);
        agregarPanel.setLayout(agregarPanelLayout);
        agregarPanelLayout.setHorizontalGroup(
            agregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agregarPanelLayout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addGroup(agregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(opcionesTipoProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(crear_tipo_prod, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(102, 102, 102)
                .addGroup(agregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(crear_prod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(opcionesProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(138, Short.MAX_VALUE))
        );
        agregarPanelLayout.setVerticalGroup(
            agregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agregarPanelLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(agregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(crear_tipo_prod, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(crear_prod, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(agregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(opcionesTipoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(opcionesProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(86, Short.MAX_VALUE))
        );

        SubFrameContainer.add(agregarPanel, "card2");

        filtro_agregar.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        filtro_agregar.setText("Filtro");

        combo_filtro_agregar.setBackground(new java.awt.Color(255, 255, 255));
        combo_filtro_agregar.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        combo_filtro_agregar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Codigo", "Nombre" }));
        combo_filtro_agregar.setFocusable(false);

        buscador_agregar.setBackground(new java.awt.Color(255, 255, 255));
        buscador_agregar.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        buscador_agregar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        button_buscar_modificar.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        button_buscar_modificar.setText("B U S C A R");
        button_buscar_modificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        button_buscar_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_buscar_modificarActionPerformed(evt);
            }
        });

        text_buscar_agregar.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        text_buscar_agregar.setText("Buscar un producto para modificar");

        tabla_resultado.setBackground(new java.awt.Color(255, 255, 255));
        tabla_resultado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabla_resultado.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tabla_resultado.setForeground(new java.awt.Color(0, 0, 0));
        tabla_resultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo art.", "Codigo prod.", "Tipo", "Tamaño", "Nombre", "Marca", "Precio", "Cantidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_resultado.setToolTipText("");
        tabla_resultado.setFocusable(false);
        tabla_resultado.setGridColor(new java.awt.Color(0, 0, 0));
        tabla_resultado.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tabla_resultado.setShowGrid(true);
        tabla_resultado.getTableHeader().setResizingAllowed(false);
        tabla_resultado.getTableHeader().setReorderingAllowed(false);
        tabla_resultado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_resultadoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_resultado);
        if (tabla_resultado.getColumnModel().getColumnCount() > 0) {
            tabla_resultado.getColumnModel().getColumn(0).setResizable(false);
            tabla_resultado.getColumnModel().getColumn(1).setResizable(false);
            tabla_resultado.getColumnModel().getColumn(2).setResizable(false);
            tabla_resultado.getColumnModel().getColumn(3).setResizable(false);
            tabla_resultado.getColumnModel().getColumn(4).setResizable(false);
            tabla_resultado.getColumnModel().getColumn(5).setResizable(false);
            tabla_resultado.getColumnModel().getColumn(6).setResizable(false);
            tabla_resultado.getColumnModel().getColumn(7).setResizable(false);
        }

        javax.swing.GroupLayout modificarPanelLayout = new javax.swing.GroupLayout(modificarPanel);
        modificarPanel.setLayout(modificarPanelLayout);
        modificarPanelLayout.setHorizontalGroup(
            modificarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modificarPanelLayout.createSequentialGroup()
                .addContainerGap(146, Short.MAX_VALUE)
                .addGroup(modificarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modificarPanelLayout.createSequentialGroup()
                        .addComponent(filtro_agregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combo_filtro_agregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(modificarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(text_buscar_agregar)
                            .addGroup(modificarPanelLayout.createSequentialGroup()
                                .addComponent(buscador_agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button_buscar_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(119, 119, 119))
                    .addGroup(modificarPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 729, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        modificarPanelLayout.setVerticalGroup(
            modificarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modificarPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(text_buscar_agregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(modificarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscador_agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_filtro_agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_buscar_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filtro_agregar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(265, Short.MAX_VALUE))
        );

        SubFrameContainer.add(modificarPanel, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(funciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SubFrameContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(funciones, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SubFrameContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Acción realizada al presionar el botón "Agregar Producto".
     *
     * <p>Muestra el subpanel correspondiente para agregar un nuevo producto.</p>
     *
     * @param evt el evento de acción generado al hacer clic en el botón
     */
    private void agregar_prodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar_prodActionPerformed
        // Mostrar el SubFrame de "agregar producto"
        java.awt.CardLayout layout = (java.awt.CardLayout) SubFrameContainer.getLayout();
        layout.show(SubFrameContainer, "agregarPanel");
    }//GEN-LAST:event_agregar_prodActionPerformed

    /**
     * Acción realizada al presionar el botón "Modificar Producto".
     *
     * <p>Muestra el subpanel correspondiente para modificar un producto existente.</p>
     *
     * @param evt el evento de acción generado al hacer clic en el botón
     */
    private void modificar_prodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificar_prodActionPerformed
        // Mostrar el SubFrame de "modificar producto"
        java.awt.CardLayout layout = (java.awt.CardLayout) SubFrameContainer.getLayout();
        layout.show(SubFrameContainer, "modificarPanel");
    }//GEN-LAST:event_modificar_prodActionPerformed

    /**
     * Acción realizada al presionar el botón "Salir".
     *
     * <p>Cierra la ventana actual y abre el menú de opciones.</p>
     *
     * @param evt el evento de acción generado al hacer clic en el botón
     */
    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed

             // Cierra el frame actual
            this.dispose(); 

            // Abre el nuevo frame
            MenuOpciones opciones = new MenuOpciones(); // Reemplaza con el nombre de tu clase para el nuevo frame
            opciones.setVisible(true);
            opciones.setLocationRelativeTo(this);
    }//GEN-LAST:event_salirActionPerformed

    /**
     * Acción realizada al presionar el botón "Crear Tipo de Producto".
     *
     * <p>Muestra u oculta el panel de opciones para la creación de un nuevo tipo de producto.</p>
     * <p>Si se muestra el panel, se genera automáticamente el siguiente código disponible.</p>
     *
     * @param evt el evento de acción generado al hacer clic en el botón
     */
    private void crear_tipo_prodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crear_tipo_prodActionPerformed

        boolean isVisible = opcionesTipoProducto.isVisible();
        opcionesTipoProducto.setVisible(!isVisible);

        // Si las opciones se hacen visibles, cargar el siguiente código
        if (!isVisible) {
            String ruta = "tiposProductos.json";
            Archivo archivo = new Archivo();

            try {
                // Usar el método de Archivo para obtener el siguiente código
                int siguienteCodigo = archivo.obtenerSiguienteCodigo(ruta, TipoProducto[].class);

                // Mostrar el código en el campo correspondiente
                box_codigo_tipo_prod.setText(String.valueOf(siguienteCodigo));

            } catch (Exception e) {
                box_codigo_tipo_prod.setText("AUTOMÁTICO");
                javax.swing.JOptionPane.showMessageDialog(this, "Error al cargar el siguiente código: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
    }

    this.revalidate();
    this.repaint();
    }//GEN-LAST:event_crear_tipo_prodActionPerformed

    /**
     * Acción realizada al presionar el botón "Crear Producto".
     *
     * <p>Muestra u oculta el panel de opciones para la creación de un nuevo producto.</p>
     * <p>Si se muestra el panel, se genera automáticamente el siguiente código disponible.</p>
     *
     * @param evt el evento de acción generado al hacer clic en el botón
     */
    private void crear_prodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crear_prodActionPerformed
        boolean isVisible = opcionesProducto.isVisible();
        opcionesProducto.setVisible(!isVisible);

        if (!isVisible) {
            String ruta = "productos.json";
            Archivo archivo = new Archivo();

            try {
                // Usar el método de Archivo para obtener el siguiente código
                int siguienteCodigo = archivo.obtenerSiguienteCodigo(ruta, Producto[].class);

                // Mostrar el código en el campo correspondiente
            box_codigo_art.setText(String.valueOf(siguienteCodigo));

            } catch (Exception e) {
                box_codigo_art.setText("AUTOMÁTICO");
                javax.swing.JOptionPane.showMessageDialog(this, "Error al cargar el siguiente código: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
    }

        this.revalidate();
        this.repaint();
    }//GEN-LAST:event_crear_prodActionPerformed

    /**
     * Box nombre tipo prod action performed.
     *
     * @param evt the evt
     */
    private void box_nombre_tipo_prodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_nombre_tipo_prodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_box_nombre_tipo_prodActionPerformed

    /**
     * Box codigo tipo prod action performed.
     *
     * @param evt the evt
     */
    private void box_codigo_tipo_prodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_codigo_tipo_prodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_box_codigo_tipo_prodActionPerformed

    /**
     * Box codigo art action performed.
     *
     * @param evt the evt
     */
    private void box_codigo_artActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_codigo_artActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_box_codigo_artActionPerformed

    /**
     * Box nombre art action performed.
     *
     * @param evt the evt
     */
    private void box_nombre_artActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_nombre_artActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_box_nombre_artActionPerformed

    /**
     * Acción realizada al presionar el botón "Guardar Producto".
     *
     * <p>Este método guarda un nuevo producto en el archivo JSON de productos, validando
     * las entradas y asegurando que los datos sean correctos.</p>
     *
     * <p>Pasos del proceso:</p>
     * <ul>
     *   <li>Actualiza el comboBox con los tipos de producto y mantiene la selección actual.</li>
     *   <li>Valida que los campos obligatorios no estén vacíos.</li>
     *   <li>Genera automáticamente el siguiente código disponible para el nuevo producto.</li>
     *   <li>Guarda el producto en el archivo JSON.</li>
     *   <li>Confirma la acción y limpia los campos del formulario.</li>
     * </ul>
     *
     * @param evt el evento de acción generado al hacer clic en el botón
     */
    private void guardar_artActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardar_artActionPerformed
        String rutaTipos = "tiposProductos.json";
        String rutaProductos = "productos.json";

        try {
            Archivo archivo = new Archivo();

            // Guardar la selección actual del ComboBox
            String seleccionActual = (String) box_codigo_prod.getSelectedItem();

            // Actualizar el ComboBox con los tipos de producto
            Utilidades.cargarTiposDeProducto(rutaTipos, box_codigo_prod);

            // Restaurar la selección previa si existe
            if (seleccionActual != null) {
                box_codigo_prod.setSelectedItem(seleccionActual);
            }

            // Validar las entradas
            int codigoArticulo = archivo.obtenerSiguienteCodigo(rutaProductos, Producto[].class);
            String codigoProductoTexto = (String) box_codigo_prod.getSelectedItem();
            if (codigoProductoTexto == null || !codigoProductoTexto.contains(" - ")) {
                javax.swing.JOptionPane.showMessageDialog(this, "Seleccione un tipo de producto válido.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }

            int codigoProducto = Integer.parseInt(codigoProductoTexto.split(" - ")[0]);
            String tipoArticulo = (String) combo_tipo_art.getSelectedItem();
            String tamanoBici = "Bicicleta".equals(tipoArticulo) ? (String) combo_tammanio_bici.getSelectedItem() : null;
            String nombre = box_nombre_art.getText().trim();
            String marca = box_marca_art.getText().trim();
            int precio = Integer.parseInt(box_precio_art.getText().trim());
            int cantidad = Integer.parseInt(box_cantidad_art.getText().trim());

            // Validar los campos no vacíos
            if (nombre.isEmpty() || marca.isEmpty() || precio <= 0 || cantidad < 0) {
                javax.swing.JOptionPane.showMessageDialog(this, "Por favor complete todos los campos correctamente.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Crear un nuevo producto
            Producto nuevoProducto = new Producto(codigoArticulo, codigoProducto, tipoArticulo, tamanoBici, nombre, marca, precio, cantidad);

            // Leer productos existentes del archivo
            Producto[] productos = (Producto[]) archivo.leerArchivo(rutaProductos, Producto[].class);
            List<Producto> listaProductos = productos != null 
                ? new ArrayList<>(List.of(productos)) 
                : new ArrayList<>();

            // Agregar el nuevo producto a la lista
            listaProductos.add(nuevoProducto);

            // Guardar la lista actualizada en el archivo JSON
            archivo.guardarArchivo(rutaProductos, listaProductos);

            // Mostrar mensaje de confirmación antes de limpiar los campos
            javax.swing.JOptionPane.showMessageDialog(this, "Producto guardado exitosamente.", "Éxito", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            // Limpiar los campos del formulario después de la confirmación
            box_nombre_art.setText("");
            box_marca_art.setText("");
            box_precio_art.setText("");
            box_cantidad_art.setText("");
            combo_tammanio_bici.setSelectedIndex(-1);

            // Actualizar el siguiente código disponible para el artículo
            int siguienteCodigo = archivo.obtenerSiguienteCodigo(rutaProductos, Producto[].class);
            box_codigo_art.setText(String.valueOf(siguienteCodigo));

        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error al guardar el producto: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_guardar_artActionPerformed

    /**
     * Box marca art action performed.
     *
     * @param evt the evt
     */
    private void box_marca_artActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_marca_artActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_box_marca_artActionPerformed

    /**
     * Box precio art action performed.
     *
     * @param evt the evt
     */
    private void box_precio_artActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_precio_artActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_box_precio_artActionPerformed

    /**
     * Box cantidad art action performed.
     *
     * @param evt the evt
     */
    private void box_cantidad_artActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_cantidad_artActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_box_cantidad_artActionPerformed

    /**
     * Acción realizada al presionar el botón "Buscar Producto para Modificar".
     *
     * <p>Permite buscar productos en el archivo JSON según el criterio seleccionado 
     * (Código o Nombre) y muestra los resultados en la tabla.</p>
     *
     * @param evt el evento de acción generado al hacer clic en el botón
     */
    private void button_buscar_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_buscar_modificarActionPerformed
        String ruta = "productos.json";
        Archivo archivo = new Archivo();

        try {
            // Obtener el criterio seleccionado y el valor ingresado
            String criterio = combo_filtro_agregar.getSelectedItem().toString();
            String valor = buscador_agregar.getText().trim();

            if (valor.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, "Por favor, ingrese un valor para buscar.", "Advertencia", javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Leer productos del archivo
            Producto[] productos = (Producto[]) archivo.leerArchivo(ruta, Producto[].class);
            if (productos == null || productos.length == 0) {
                javax.swing.JOptionPane.showMessageDialog(this, "No hay productos registrados.", "Información", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            // Filtrar productos según el criterio
            List<Producto> resultados = new ArrayList<>();
            for (Producto producto : productos) {
                if ("Codigo".equals(criterio) && String.valueOf(producto.getCodigoArticulo()).equals(valor)) {
                    resultados.add(producto);
                } else if ("Nombre".equals(criterio) && producto.getNombre().toLowerCase().contains(valor.toLowerCase())) {
                    resultados.add(producto);
                }
            }

            // Verificar si hay resultados
            if (resultados.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, "No se encontraron productos.", "Información", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            }

            // Cargar resultados en la tabla
            Utilidades.cargarResultadosEnTabla((DefaultTableModel) tabla_resultado.getModel(), resultados);

        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error al realizar la búsqueda: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_button_buscar_modificarActionPerformed

    /**
     * Acción realizada al presionar el botón "Guardar Tipo de Producto".
     *
     * <p>Valida y guarda un nuevo tipo de producto en el archivo JSON. 
     * Si el nombre está vacío, muestra un mensaje de error.</p>
     *
     * <p>El código del nuevo tipo se genera automáticamente.</p>
     *
     * <p>Una vez guardado, se actualiza el `ComboBox` de tipos de producto 
     * y se limpian los campos.</p>
     *
     * @param evt el evento de acción generado al hacer clic en el botón
     */
    private void guardar_tipo_prodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardar_tipo_prodActionPerformed
        String ruta = "tiposProductos.json";
        Archivo archivo = new Archivo();

        try {
            // Validar el nombre del tipo de producto
            String nombreTipo = box_nombre_tipo_prod.getText().trim();
            if (nombreTipo.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, "El nombre del tipo de producto no puede estar vacío.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Generar el código automáticamente
            int codigoTipo = archivo.obtenerSiguienteCodigo(ruta, TipoProducto[].class);

            // Crear un nuevo objeto TipoProducto
            TipoProducto nuevoTipo = new TipoProducto(codigoTipo, nombreTipo);

            // Leer los tipos de producto existentes
            TipoProducto[] tiposExistentes = (TipoProducto[]) archivo.leerArchivo(ruta, TipoProducto[].class);
            List<TipoProducto> listaTipos = tiposExistentes != null 
                ? new ArrayList<>(List.of(tiposExistentes)) 
                : new ArrayList<>();

            // Agregar el nuevo tipo a la lista
            listaTipos.add(nuevoTipo);

            // Guardar la lista actualizada en el archivo
            archivo.guardarArchivo(ruta, listaTipos);
            
            // Actualizar el ComboBox de tipos de producto (box_codigo_prod)
            Utilidades.cargarTiposDeProducto(ruta, box_codigo_prod);

            javax.swing.JOptionPane.showMessageDialog(this, "Tipo de producto guardado exitosamente.", "Éxito", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            // Limpiar los campos
            box_nombre_tipo_prod.setText("");
            box_codigo_tipo_prod.setText(String.valueOf(codigoTipo + 1));

        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error al guardar el tipo de producto: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_guardar_tipo_prodActionPerformed

    /**
     * Combo tammanio bici action performed.
     *
     * @param evt the evt
     */
    private void combo_tammanio_biciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_tammanio_biciActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_tammanio_biciActionPerformed

    /**
     * Maneja la acción cuando se selecciona un tipo de artículo en el combo box.
     *
     * <p>Si el tipo seleccionado es "Bicicleta", habilita el combo box de tamaño de bicicleta.
     * Si se selecciona otro tipo, lo deshabilita y limpia la selección.</p>
     *
     * @param evt el evento de acción generado al cambiar la selección del combo box
     */
    private void combo_tipo_artActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_tipo_artActionPerformed

        String tipoSeleccionado = (String) combo_tipo_art.getSelectedItem();

        // Activar o desactivar el combo de tamaño de bicicleta
        if ("Bicicleta".equals(tipoSeleccionado)) {
            combo_tammanio_bici.setEnabled(true);
        } else {
            combo_tammanio_bici.setEnabled(false);
        combo_tammanio_bici.setSelectedIndex(-1);
        }
    }//GEN-LAST:event_combo_tipo_artActionPerformed

    /**
     * Maneja el evento de clic en la tabla de resultados.
     *
     * <p>Si se hace doble clic en una fila de la tabla, se obtiene el código del artículo
     * seleccionado y se abre una ventana de modificación con los datos del producto.</p>
     *
     * @param evt el evento de clic del mouse
     */
    private void tabla_resultadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_resultadoMouseClicked
        if (evt.getClickCount() == 2 && tabla_resultado.getSelectedRow() != -1) {
            int selectedRow = tabla_resultado.getSelectedRow();
            int codigoArticulo = (int) tabla_resultado.getValueAt(selectedRow, 0);
            Archivo archivo = new Archivo();
            Producto[] productos = (Producto[]) archivo.leerArchivo("productos.json", Producto[].class);

            if (productos != null) {
                for (Producto producto : productos) {
                    if (producto.getCodigoArticulo() == codigoArticulo) {
                        VentanaModificar ventana = new VentanaModificar(producto);
                        ventana.setVisible(true);
                        ventana.setLocationRelativeTo(this);
                        break;
                    }
                }
            }
        }
    }//GEN-LAST:event_tabla_resultadoMouseClicked

    /**
     * Configura la ventana al abrirse.
     *
     * <p>Establece el título de la ventana y asigna un ícono al programa.</p>
     *
     * @param evt el evento de apertura de la ventana
     */
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        setTitle("Registro de productos");
        setIconImage(new ImageIcon(getClass().getResource("/imagenes/icono_programa.png")).getImage());
    }//GEN-LAST:event_formWindowOpened

    /**
     * Restablece el panel activo en la interfaz.
     *
     * <p>Cambia la vista al panel especificado y fuerza una actualización visual.</p>
     *
     * @param nombrePanel el nombre del panel a mostrar
     */
    public void restablecerPanel(String nombrePanel) {
        java.awt.CardLayout layout = (java.awt.CardLayout) SubFrameContainer.getLayout();
        layout.show(SubFrameContainer, nombrePanel);

        // Forzar actualización visual para reflejar los cambios
        SubFrameContainer.revalidate();
        SubFrameContainer.repaint();
    }
    
    
    
    /**
     * Método principal que inicia la aplicación.
     *
     * @param args los argumentos de línea de comandos
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroProductos().setVisible(true);
            }
        });
    }

    /** The Sub frame container. */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel SubFrameContainer;
    private javax.swing.JPanel agregarPanel;
    private javax.swing.JButton agregar_prod;
    private javax.swing.JLabel bienvenidaLabel;
    private javax.swing.JLabel bienvenidaLabel1;
    private javax.swing.JPanel bienvenidaPanel;
    private javax.swing.JTextField box_cantidad_art;
    private javax.swing.JTextField box_codigo_art;
    private javax.swing.JComboBox<String> box_codigo_prod;
    private javax.swing.JTextField box_codigo_tipo_prod;
    private javax.swing.JTextField box_marca_art;
    private javax.swing.JTextField box_nombre_art;
    private javax.swing.JTextField box_nombre_tipo_prod;
    private javax.swing.JTextField box_precio_art;
    private javax.swing.JTextField buscador_agregar;
    private javax.swing.JButton button_buscar_modificar;
    private javax.swing.JLabel ciclista_icon;
    private javax.swing.JLabel codigo_art;
    private javax.swing.JLabel codigo_defecto1;
    private javax.swing.JLabel codigo_prod;
    private javax.swing.JComboBox<String> combo_filtro_agregar;
    private javax.swing.JComboBox<String> combo_tammanio_bici;
    private javax.swing.JComboBox<String> combo_tipo_art;
    private javax.swing.JButton crear_prod;
    private javax.swing.JButton crear_tipo_prod;
    private javax.swing.JLabel filtro_agregar;
    private javax.swing.JToolBar funciones;
    private javax.swing.JButton guardar_art;
    private javax.swing.JButton guardar_tipo_prod;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JLabel marca_art;
    private javax.swing.JLabel marca_art1;
    private javax.swing.JLabel marca_art2;
    private javax.swing.JPanel modificarPanel;
    private javax.swing.JButton modificar_prod;
    private javax.swing.JLabel nombre_art;
    private javax.swing.JLabel nombre_prod;
    private javax.swing.JPanel opcionesProducto;
    private javax.swing.JPanel opcionesTipoProducto;
    private javax.swing.JButton salir;
    private javax.swing.JTable tabla_resultado;
    private javax.swing.JLabel tammanio_bici1;
    private javax.swing.JLabel text_buscar_agregar;
    private javax.swing.JLabel tipo_art;
    // End of variables declaration//GEN-END:variables
}
