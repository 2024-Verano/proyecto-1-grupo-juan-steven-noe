/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change esta licencia
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java para editar esta plantilla
 */
package ventanas;

// Importar librerías de Swing y manejo de fechas
import java.awt.Color;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

// Importar clases de lógica
import com.mycompany.proyecto1.Archivo;
import com.mycompany.proyecto1.Facturas.Factura;
import com.mycompany.proyecto1.Facturas.GuardarFactura;
import com.mycompany.proyecto1.Facturas.UtilidadesFacturas;
import com.mycompany.proyecto1.Utilidades;
import com.mycompany.proyecto1.Validador;

// Importar clases de objetos
import com.mycompany.proyecto1.Mantenimiento;

/**
 * Clase que representa la interfaz para la facturación de mantenimientos.
 *
 * <p>Permite generar facturas de servicios de mantenimiento, asociando un cliente
 * con un mantenimiento previamente registrado.</p>
 *
 * <p>Incluye funcionalidades para la asignación automática del número de factura,
 * la carga de clientes y mantenimientos abiertos, y la configuración del campo de fecha.</p>
 *
 * @author noe
 */
public class VentanaFacturacionMant extends javax.swing.JFrame {
    
    /**
     * Constructor que inicializa la ventana de facturación de mantenimientos.
     *
     * <p>Realiza las siguientes configuraciones iniciales:</p>
     * <ul>
     *   <li>Genera automáticamente el siguiente número de factura.</li>
     *   <li>Carga los clientes disponibles en el comboBox.</li>
     *   <li>Carga los mantenimientos abiertos en el comboBox.</li>
     *   <li>Configura el campo de fecha para que tenga el formato correcto.</li>
     *   <li>Aplica efectos visuales a los botones.</li>
     *   <li>Evita que el cierre de esta ventana afecte el programa principal.</li>
     * </ul>
     */
    public VentanaFacturacionMant() {
        initComponents();
        
        // Generar automáticamente el siguiente número de factura
        Archivo archivo = new Archivo();
        int siguienteNumeroFactura = archivo.obtenerSiguienteCodigo("facturas_mantenimiento.json", Factura[].class);
        box_num_fact.setText(String.valueOf(siguienteNumeroFactura));
        
        // Cargar los clientes en el comboBox de selección
        Utilidades.cargarClientes("registroClientes.json", combo_codigo_cliente);
            
        // Cargar los mantenimientos abiertos en el comboBox
        UtilidadesFacturas.cargarMantenimientosAbiertos("mantenimiento.json", combo_codigo_articulo);
        
        // Evitar que esta ventana cierre toda la aplicación
        setDefaultCloseOperation(VentanaFacturacionMant.DISPOSE_ON_CLOSE);
                
        // Definir los colores para los efectos hover en los botones
        Color hoverColor = new Color(150, 150, 150); // Gris claro al pasar el cursor
        Color originalColor = Color.BLACK; // Negro por defecto

        // Crear la instancia de ButtonHoverEffect para aplicar el efecto hover
        ButtonHoverEffect hoverEffect = new ButtonHoverEffect(hoverColor, originalColor);
        hoverEffect.applyTo(crear_fact);
        
        // Configurar el campo de fecha con el formato correcto
        Validador.configurarCampoFecha(formatt_fecha_recibido);
           
        // Obtener la fecha actual en formato "dd/MM/yyyy"
        SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy");
        String fechaHoy = formatoFecha.format(new Date());

        // Asignar la fecha actual al campo formateado
        formatt_fecha_recibido.setText(fechaHoy);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_num_fact = new javax.swing.JLabel();
        box_num_fact = new javax.swing.JTextField();
        label_codigo_cliente = new javax.swing.JLabel();
        combo_codigo_cliente = new javax.swing.JComboBox<>();
        label_fecha_recibido = new javax.swing.JLabel();
        formatt_fecha_recibido = new javax.swing.JFormattedTextField();
        label_subtotal = new javax.swing.JLabel();
        box_subtotal = new javax.swing.JTextField();
        label_iva = new javax.swing.JLabel();
        box_iva = new javax.swing.JTextField();
        label_total = new javax.swing.JLabel();
        box_total = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        label_detalles = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        label_codigo_articulo = new javax.swing.JLabel();
        combo_codigo_articulo = new javax.swing.JComboBox<>();
        label_cantidad = new javax.swing.JLabel();
        box_cantidad = new javax.swing.JTextField();
        label_precio_und = new javax.swing.JLabel();
        box_precio_und = new javax.swing.JTextField();
        label_total_pagar = new javax.swing.JLabel();
        box_total_pagar = new javax.swing.JTextField();
        crear_fact = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        label_num_fact.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        label_num_fact.setText("Num. Factura");

        box_num_fact.setEditable(false);
        box_num_fact.setBackground(new java.awt.Color(255, 255, 255));
        box_num_fact.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        box_num_fact.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        box_num_fact.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        box_num_fact.setEnabled(false);
        box_num_fact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_num_factActionPerformed(evt);
            }
        });

        label_codigo_cliente.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        label_codigo_cliente.setText("Código cliente");

        combo_codigo_cliente.setBackground(new java.awt.Color(255, 255, 255));
        combo_codigo_cliente.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        combo_codigo_cliente.setBorder(null);
        combo_codigo_cliente.setEnabled(false);
        combo_codigo_cliente.setFocusable(false);
        combo_codigo_cliente.setRequestFocusEnabled(false);
        combo_codigo_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_codigo_clienteActionPerformed(evt);
            }
        });

        label_fecha_recibido.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        label_fecha_recibido.setText("Fecha recibido");

        formatt_fecha_recibido.setEditable(false);
        formatt_fecha_recibido.setBackground(new java.awt.Color(255, 255, 255));
        formatt_fecha_recibido.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        formatt_fecha_recibido.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        formatt_fecha_recibido.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        formatt_fecha_recibido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formatt_fecha_recibidoActionPerformed(evt);
            }
        });

        label_subtotal.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        label_subtotal.setText("Subtotal");

        box_subtotal.setEditable(false);
        box_subtotal.setBackground(new java.awt.Color(255, 255, 255));
        box_subtotal.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        box_subtotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        box_subtotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_subtotalActionPerformed(evt);
            }
        });

        label_iva.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        label_iva.setText("I.V.A");

        box_iva.setEditable(false);
        box_iva.setBackground(new java.awt.Color(255, 255, 255));
        box_iva.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        box_iva.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        box_iva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_ivaActionPerformed(evt);
            }
        });

        label_total.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        label_total.setText("TOTAL");

        box_total.setEditable(false);
        box_total.setBackground(new java.awt.Color(255, 255, 255));
        box_total.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        box_total.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        box_total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_totalActionPerformed(evt);
            }
        });

        label_detalles.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        label_detalles.setText("Detalle de la factura");

        label_codigo_articulo.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        label_codigo_articulo.setText("Código artículo");

        combo_codigo_articulo.setBackground(new java.awt.Color(255, 255, 255));
        combo_codigo_articulo.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        combo_codigo_articulo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "tipo prod" }));
        combo_codigo_articulo.setBorder(null);
        combo_codigo_articulo.setFocusable(false);
        combo_codigo_articulo.setRequestFocusEnabled(false);
        combo_codigo_articulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_codigo_articuloActionPerformed(evt);
            }
        });

        label_cantidad.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        label_cantidad.setText("Cantidad (und)");

        box_cantidad.setEditable(false);
        box_cantidad.setBackground(new java.awt.Color(255, 255, 255));
        box_cantidad.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        box_cantidad.setText("1");
        box_cantidad.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        box_cantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_cantidadActionPerformed(evt);
            }
        });

        label_precio_und.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        label_precio_und.setText("Precio (und)");

        box_precio_und.setEditable(false);
        box_precio_und.setBackground(new java.awt.Color(255, 255, 255));
        box_precio_und.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        box_precio_und.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        box_precio_und.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_precio_undActionPerformed(evt);
            }
        });

        label_total_pagar.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        label_total_pagar.setText("Total a pagar");

        box_total_pagar.setEditable(false);
        box_total_pagar.setBackground(new java.awt.Color(255, 255, 255));
        box_total_pagar.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        box_total_pagar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        box_total_pagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_total_pagarActionPerformed(evt);
            }
        });

        crear_fact.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        crear_fact.setText("CREAR FACTURA");
        crear_fact.setBorder(null);
        crear_fact.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        crear_fact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crear_factActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(label_num_fact)
                                    .addComponent(label_fecha_recibido))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(box_num_fact, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                    .addComponent(formatt_fecha_recibido))
                                .addGap(18, 18, 18)
                                .addComponent(label_codigo_cliente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(combo_codigo_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(label_subtotal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(box_subtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(label_iva)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(box_iva, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(label_total)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(box_total, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(label_codigo_articulo)
                                    .addComponent(label_cantidad)
                                    .addComponent(label_precio_und)
                                    .addComponent(label_total_pagar))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(box_total_pagar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(box_precio_und, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(combo_codigo_articulo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(box_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(crear_fact, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 5, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(label_detalles)
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator4)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_num_fact, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(box_num_fact, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_codigo_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_codigo_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_fecha_recibido, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(formatt_fecha_recibido, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_subtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(box_subtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label_iva, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(box_iva, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label_total, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(box_total, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(label_detalles)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_codigo_articulo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_codigo_articulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(box_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_precio_und, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(box_precio_und, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_total_pagar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(box_total_pagar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(crear_fact, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Box num fact action performed.
     *
     * @param evt the evt
     */
    private void box_num_factActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_num_factActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_box_num_factActionPerformed

    /**
     * Box total action performed.
     *
     * @param evt the evt
     */
    private void box_totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_box_totalActionPerformed

    /**
     * Box iva action performed.
     *
     * @param evt the evt
     */
    private void box_ivaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_ivaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_box_ivaActionPerformed

    /**
     * Formatt fecha recibido action performed.
     *
     * @param evt the evt
     */
    private void formatt_fecha_recibidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formatt_fecha_recibidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formatt_fecha_recibidoActionPerformed

    /**
     * Box subtotal action performed.
     *
     * @param evt the evt
     */
    private void box_subtotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_subtotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_box_subtotalActionPerformed

    /**
     * Box cantidad action performed.
     *
     * @param evt the evt
     */
    private void box_cantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_cantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_box_cantidadActionPerformed

    /**
     * Box precio und action performed.
     *
     * @param evt the evt
     */
    private void box_precio_undActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_precio_undActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_box_precio_undActionPerformed

    /**
     * Box total pagar action performed.
     *
     * @param evt the evt
     */
    private void box_total_pagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_total_pagarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_box_total_pagarActionPerformed

    /**
     * Acción realizada al presionar el botón "Crear Factura".
     *
     * <p>Este método obtiene los datos ingresados en la interfaz, como el número de factura, 
     * el código del cliente y el código del servicio, y los procesa para generar una nueva 
     * factura de mantenimiento.</p>
     *
     * <p>Si ocurre un error en la conversión de los datos o en la creación de la factura, 
     * se muestra un mensaje de error al usuario.</p>
     *
     * @param evt el evento de acción generado al hacer clic en el botón
     */
    private void crear_factActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crear_factActionPerformed
        try {
            int numeroFactura = Integer.parseInt(box_num_fact.getText().trim());
            int codigoCliente = Integer.parseInt(combo_codigo_cliente.getSelectedItem().toString().split(" - ")[0]);
            int codigoServicio = Integer.parseInt(combo_codigo_articulo.getSelectedItem().toString().split(" - ")[0]);
            String fecha = formatt_fecha_recibido.getText().trim();

            GuardarFactura.guardarFacturaMantenimiento(numeroFactura, codigoCliente, codigoServicio, fecha);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al crear factura: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        this.dispose();
    }//GEN-LAST:event_crear_factActionPerformed

    /**
     * Combo codigo cliente action performed.
     *
     * @param evt the evt
     */
    private void combo_codigo_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_codigo_clienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_codigo_clienteActionPerformed

    /**
     * Acción realizada al seleccionar un código de artículo en el comboBox.
     *
     * <p>Este método agrega un `ActionListener` al comboBox que contiene los códigos de los 
     * servicios de mantenimiento disponibles. Cuando se selecciona un nuevo código, 
     * se actualizan los datos del mantenimiento correspondiente.</p>
     *
     * @param evt el evento de acción generado al seleccionar un elemento en el comboBox
     */
    private void combo_codigo_articuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_codigo_articuloActionPerformed
        combo_codigo_articulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarDatosMantenimiento();
            }
        });
    }//GEN-LAST:event_combo_codigo_articuloActionPerformed

    /**
     * Acción realizada al abrir la ventana.
     *
     * <p>Este método establece el título de la ventana y asigna el ícono del programa.</p>
     * 
     * @param evt el evento de apertura de la ventana
     */
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        setTitle("Facturar un servicio");
        setIconImage(new ImageIcon(getClass().getResource("/imagenes/icono_programa.png")).getImage());
    }//GEN-LAST:event_formWindowOpened
    
    /**
     * Método para llenar los campos con los datos del mantenimiento seleccionado.
     *
     * <p>Este método obtiene el código del servicio seleccionado en el comboBox de mantenimientos,
     * busca el mantenimiento correspondiente y luego actualiza los campos de la interfaz 
     * con la información del mantenimiento, como el cliente y el precio.</p>
     */
    private void actualizarDatosMantenimiento() {
        String seleccion = (String) combo_codigo_articulo.getSelectedItem();
        if (seleccion != null && !seleccion.equals("No hay mantenimientos abiertos")) {
            int codigoServicio = Integer.parseInt(seleccion.split(" - ")[0]);

            // Obtener el mantenimiento correspondiente
            Mantenimiento mantenimiento = UtilidadesFacturas.obtenerMantenimientoPorCodigo(codigoServicio);
            if (mantenimiento != null) {
                // Establecer el código del cliente en el comboBox
                for (int i = 0; i < combo_codigo_cliente.getItemCount(); i++) {
                    String item = combo_codigo_cliente.getItemAt(i);
                    if (item.startsWith(mantenimiento.getCodigoCliente() + " - ")) { 
                        combo_codigo_cliente.setSelectedIndex(i);
                        break;
                    }
                }

                // Llenar los demás datos
                box_precio_und.setText(String.valueOf(mantenimiento.getPrecio()));
                calcularTotales();
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró el mantenimiento seleccionado.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    /**
     * Método para calcular los montos automáticamente.
     *
     * <p>Este método calcula el subtotal, el IVA (13%) y el total de la factura 
     * en base al precio proporcionado, y actualiza los campos correspondientes.</p>
     */
    private void calcularTotales() {
        try {
            int precio = Integer.parseInt(box_precio_und.getText().trim());
            int subtotal = precio;
            int impuesto = (int) (subtotal * 0.13);
            int total = subtotal + impuesto;

            box_subtotal.setText(String.valueOf(subtotal));
            box_iva.setText(String.valueOf(impuesto));
            box_total.setText(String.valueOf(total));
            box_total_pagar.setText(String.valueOf(total));
        } catch (Exception e) {
            System.out.println("Error en cálculo de totales: " + e.getMessage());
        }
    }

     /**
     * Llena los datos de la factura en los campos correspondientes.
     *
     * <p>Este método asigna valores a los campos de la factura, como el número de factura, 
     * el cliente, la fecha y el precio del servicio, y luego calcula los totales.</p>
     *
     * @param codigoMantenimiento el código del mantenimiento
     * @param codigoCliente el código del cliente
     * @param fechaRecibido la fecha en la que se recibe el servicio
     * @param precio el precio del servicio
     */
    public void llenarDatosFactura(int codigoMantenimiento, int codigoCliente, String fechaRecibido, int precio) {
        box_num_fact.setText(String.valueOf(new Archivo().obtenerSiguienteCodigo("facturas_mantenimiento.json", Factura[].class)));
        combo_codigo_cliente.setSelectedItem(String.valueOf(codigoCliente));
        formatt_fecha_recibido.setText(fechaRecibido);
        combo_codigo_articulo.setSelectedItem(String.valueOf(codigoMantenimiento));
        box_precio_und.setText(String.valueOf(precio));
        box_cantidad.setText("1"); // Siempre es un solo servicio
        calcularTotales(); // Llama al método que calcula los valores
    }

    /**
     * El método principal para ejecutar la aplicación.
     *
     * @param args los argumentos de la línea de comandos
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaFacturacionMant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaFacturacionMant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaFacturacionMant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaFacturacionMant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaFacturacionMant().setVisible(true);
            }
        });
    }

    /** The box cantidad. */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField box_cantidad;
    
    /** The box iva. */
    private javax.swing.JTextField box_iva;
    
    /** The box num fact. */
    private javax.swing.JTextField box_num_fact;
    
    /** The box precio und. */
    private javax.swing.JTextField box_precio_und;
    
    /** The box subtotal. */
    private javax.swing.JTextField box_subtotal;
    
    /** The box total. */
    private javax.swing.JTextField box_total;
    
    /** The box total pagar. */
    private javax.swing.JTextField box_total_pagar;
    
    /** The combo codigo articulo. */
    private javax.swing.JComboBox<String> combo_codigo_articulo;
    
    /** The combo codigo cliente. */
    private javax.swing.JComboBox<String> combo_codigo_cliente;
    
    /** The crear fact. */
    private javax.swing.JButton crear_fact;
    
    /** The formatt fecha recibido. */
    private javax.swing.JFormattedTextField formatt_fecha_recibido;
    
    /** The j separator 1. */
    private javax.swing.JSeparator jSeparator1;
    
    /** The j separator 2. */
    private javax.swing.JSeparator jSeparator2;
    
    /** The j separator 3. */
    private javax.swing.JSeparator jSeparator3;
    
    /** The j separator 4. */
    private javax.swing.JSeparator jSeparator4;
    
    /** The label cantidad. */
    private javax.swing.JLabel label_cantidad;
    
    /** The label codigo articulo. */
    private javax.swing.JLabel label_codigo_articulo;
    
    /** The label codigo cliente. */
    private javax.swing.JLabel label_codigo_cliente;
    
    /** The label detalles. */
    private javax.swing.JLabel label_detalles;
    
    /** The label fecha recibido. */
    private javax.swing.JLabel label_fecha_recibido;
    
    /** The label iva. */
    private javax.swing.JLabel label_iva;
    
    /** The label num fact. */
    private javax.swing.JLabel label_num_fact;
    
    /** The label precio und. */
    private javax.swing.JLabel label_precio_und;
    
    /** The label subtotal. */
    private javax.swing.JLabel label_subtotal;
    
    /** The label total. */
    private javax.swing.JLabel label_total;
    
    /** The label total pagar. */
    private javax.swing.JLabel label_total_pagar;
    // End of variables declaration//GEN-END:variables
}
